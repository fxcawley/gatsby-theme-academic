{"version":3,"sources":["webpack:///./node_modules/lodash/_cloneArrayBuffer.js","webpack:///./node_modules/lodash/_initCloneObject.js","webpack:///./node_modules/lodash/isSet.js","webpack:///./node_modules/lodash/_cloneBuffer.js","webpack:///./node_modules/lodash/_nativeKeysIn.js","webpack:///./node_modules/lodash/_baseAssignIn.js","webpack:///./node_modules/lodash/_copySymbolsIn.js","webpack:///./src/components/Panel/panel.module.less","webpack:///./node_modules/lodash/_getAllKeysIn.js","webpack:///./node_modules/lodash/_baseIsMap.js","webpack:///./node_modules/lodash/_getPrototype.js","webpack:///./node_modules/lodash/_assignValue.js","webpack:///./node_modules/lodash/_baseClone.js","webpack:///./node_modules/lodash/_copyArray.js","webpack:///./node_modules/lodash/_baseKeysIn.js","webpack:///./node_modules/lodash/_copySymbols.js","webpack:///./node_modules/lodash/_baseAssign.js","webpack:///./node_modules/lodash/_cloneDataView.js","webpack:///./src/components/Panel/index.jsx","webpack:///./node_modules/lodash/_cloneRegExp.js","webpack:///./node_modules/lodash/_baseCreate.js","webpack:///./node_modules/lodash/_arrayEach.js","webpack:///./node_modules/lodash/_copyObject.js","webpack:///./node_modules/lodash/keysIn.js","webpack:///./node_modules/lodash/_getSymbolsIn.js","webpack:///./node_modules/lodash/_cloneSymbol.js","webpack:///./node_modules/lodash/clone.js","webpack:///./node_modules/lodash/_baseIsSet.js","webpack:///./node_modules/lodash/_initCloneByTag.js","webpack:///./node_modules/lodash/_initCloneArray.js","webpack:///./node_modules/lodash/_cloneTypedArray.js","webpack:///./node_modules/lodash/isMap.js"],"names":["Uint8Array","module","exports","arrayBuffer","result","constructor","byteLength","set","baseCreate","getPrototype","isPrototype","object","baseIsSet","baseUnary","nodeUtil","nodeIsSet","isSet","freeExports","nodeType","freeModule","Buffer","root","undefined","allocUnsafe","buffer","isDeep","slice","length","copy","key","Object","push","copyObject","keysIn","source","getSymbolsIn","baseGetAllKeys","getTag","isObjectLike","value","overArg","getPrototypeOf","baseAssignValue","eq","hasOwnProperty","prototype","objValue","call","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","keys","cloneableTags","baseClone","bitmask","customizer","stack","isFlat","isFull","isArr","tag","isFunc","stacked","get","forEach","subValue","add","props","array","index","Array","nativeKeysIn","isProto","getSymbols","cloneArrayBuffer","dataView","byteOffset","Panel","type","data","isResearch","tags","allTag","edges","tagsMap","node","name","useState","Set","selectedTags","setSelectedTags","allMarkdownRemark","val","fields","parsed","className","style","codeBox","codeBoxTitle","codeBoxDescription","gutter","align","xs","marginBottom","marginRight","map","color","has","handleTagClick","tagName","nextSelectedTags","delete","onClick","onKeyPress","role","tabIndex","sm","md","lg","reFlags","regexp","exec","lastIndex","objectCreate","create","proto","iteratee","isNew","newValue","arrayLikeKeys","baseKeysIn","isArrayLike","arrayPush","stubArray","getOwnPropertySymbols","Symbol","symbolProto","symbolValueOf","valueOf","symbol","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","input","typedArray","baseIsMap","nodeIsMap"],"mappings":"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","file":"7035d148f4099932647514e5a15d42a9e39fc0c6-9966f1a961f6988a403c.js","sourcesContent":["var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"codeBoxesCol11\":\"panel-module--code-boxes-col-1-1--23drV\",\"codeBoxesCol21\":\"panel-module--code-boxes-col-2-1--3re7Y\",\"codeBox\":\"panel-module--code-box--32hhI\",\"codeBoxTitle\":\"panel-module--code-box-title--33uL8\",\"codeBoxDemo\":\"panel-module--code-box-demo--1yiYQ\",\"markdown\":\"panel-module--markdown--36xFT\",\"codeBoxExpandTrigger\":\"panel-module--code-box-expand-trigger--3a8ln\",\"antRowRtl\":\"panel-module--ant-row-rtl--1ZtuV\",\"codeBoxDescription\":\"panel-module--code-box-description--8OnFE\",\"editButton\":\"panel-module--edit-button--3Rsmf\",\"anticon\":\"panel-module--anticon--1QWoA\",\"antRow\":\"panel-module--ant-row--3MtiV\",\"codeBoxMeta\":\"panel-module--code-box-meta--17w1q\",\"expand\":\"panel-module--expand--3o_D8\",\"codeExpandIcon\":\"panel-module--code-expand-icon--3WBkK\",\"codeExpandIconShow\":\"panel-module--code-expand-icon-show--SpkSV\",\"codeExpandIconHide\":\"panel-module--code-expand-icon-hide--1mXad\",\"antTooltipOpen\":\"panel-module--ant-tooltip-open--26vnZ\",\"highlightWrapper\":\"panel-module--highlight-wrapper--2LqpY\",\"highlightWrapperExpand\":\"panel-module--highlight-wrapper-expand--3OJox\",\"highlight\":\"panel-module--highlight--31BJk\",\"antTabsNavList\":\"panel-module--ant-tabs-nav-list--1VGOw\",\"codeBoxActions\":\"panel-module--code-box-actions--1zg4m\",\"codeBoxCodeAction\":\"panel-module--code-box-code-action--3PDwO\",\"codeBoxCodeCopy\":\"panel-module--code-box-code-copy--3_7en\",\"anticonCheck\":\"panel-module--anticon-check--Liw_H\",\"codeBoxCodepen\":\"panel-module--code-box-codepen--efW5U\",\"codeBoxRiddle\":\"panel-module--code-box-riddle--FWrjd\",\"codeBoxCodesandbox\":\"panel-module--code-box-codesandbox--1aHjX\",\"codeBoxDebug\":\"panel-module--code-box-debug--1IkxG\",\"allCodeBoxControls\":\"panel-module--all-code-box-controls--1KVK9\",\"componentsTooltipDemoPlacement\":\"panel-module--components-tooltip-demo-placement--2jJqM\",\"componentsPopoverDemoPlacement\":\"panel-module--components-popover-demo-placement--6Q6u0\",\"componentsPopconfirmDemoPlacement\":\"panel-module--components-popconfirm-demo-placement--1LsxM\"};","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row, Col, Tag,\n} from 'antd';\nimport _ from 'lodash';\n\nimport style from './panel.module.less';\n\nimport PostCard from '../PostCard';\nimport ResearchCard from '../ResearchCard';\n// import PostTag from '../PostTag';\n// import Utils from '../../utils/pageUtils';\n// import Statistics from '../../../content/statistics.json';\n\nconst Panel = (props) => {\n  const { type, data } = props;\n  const isResearch = type === 'research';\n\n  // console.log(data.allTag);\n  const tags = data.allTag ? data.allTag.edges : [];\n  const tagsMap = _.mapValues(_.keyBy(tags, (tag) => tag.node.name), 'node');\n\n  // const tags = Utils.getTags(type);\n  const [selectedTags, setSelectedTags] = useState(new Set());\n\n  const handleClick = (tagName) => {\n    const nextSelectedTags = _.clone(selectedTags);\n    if (nextSelectedTags.has(tagName)) {\n      nextSelectedTags.delete(tagName);\n    } else {\n      nextSelectedTags.add(tagName);\n    }\n    // console.log('You are interested in: ', nextSelectedTags);\n    setSelectedTags(nextSelectedTags);\n  };\n\n  const generateTag = (tag) => {\n    const isChecked = selectedTags.has(tag.node.name);\n    const color = isChecked ? tag.node.color : '';\n    const handleTagClick = () => handleClick(tag.node.name);\n    return (\n      <Col xs>\n        <Tag color={color}>\n          <a onClick={handleTagClick} onKeyPress={handleTagClick} role=\"button\" tabIndex={0}>\n            {tag.node.name}\n          </a>\n        </Tag>\n      </Col>\n    );\n  };\n\n  if (data.allMarkdownRemark) {\n    data.allMarkdownRemark.edges.forEach((val) => {\n      if (!val.node || !val.node.fields || !val.node.fields.parsed\n        || !val.node.fields.parsed.tags) {\n        // eslint-disable-next-line no-param-reassign\n        val.tags = new Set();\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        val.tags = new Set(val.node.fields.parsed.tags);\n      }\n    });\n  }\n\n  return (\n    <>\n      <section className={style.codeBox}>\n        <section className={style.codeBoxTitle}>\n          Filters\n        </section>\n        <section className={style.codeBoxDescription}>\n          <Row gutter={[0, 8]} align=\"middle\">\n            <Col xs>\n              <h5 style={{ marginBottom: '0', marginRight: '10px' }}>\n                Tags:\n              </h5>\n            </Col>\n            { tags.map(generateTag)}\n          </Row>\n        </section>\n      </section>\n      <Row gutter={[20, 20]}>\n        {\n          data.allMarkdownRemark && data.allMarkdownRemark.edges.map((val, key) => {\n            // eslint-disable-next-line no-restricted-syntax\n            for (const tag of selectedTags) {\n              if (!val.tags.has(tag)) return null;\n            }\n            if (isResearch) {\n              return (\n                // eslint-disable-next-line react/no-array-index-key\n                <Col key={key} xs={24} sm={24} md={24} lg={24}>\n                  <ResearchCard data={val} tagsMap={tagsMap} />\n                </Col>\n              );\n            }\n            return (\n            // eslint-disable-next-line react/no-array-index-key\n              <Col key={key} xs={24} sm={24} md={24} lg={8}>\n                <PostCard data={val} tagsMap={tagsMap} />\n              </Col>\n            );\n          })\n        }\n      </Row>\n    </>\n  );\n};\n\nPanel.propTypes = {\n  type: PropTypes.oneOf(['posts', 'research']).isRequired,\n};\n\nexport default Panel;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n"],"sourceRoot":""}