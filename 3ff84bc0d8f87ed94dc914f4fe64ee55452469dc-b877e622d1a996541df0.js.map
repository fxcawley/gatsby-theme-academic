{"version":3,"file":"3ff84bc0d8f87ed94dc914f4fe64ee55452469dc-b877e622d1a996541df0.js","mappings":"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,QACA,UACA,QACA,OACA,UACA,SACA,WACA,MAKA,UACA,QACA,SACA,UACA,SACA,WACA,UACA,KACA,QACA,WACA,QACA,OACA,YACA,QACA,SACA,WACA,OACA,SACA,UACA,SACA,OACA,SACA,WACA,MACA,UACA,OACA,QACA,QACA,WACA,QACA,OACA,OACA,QACA,UACA,WACA,QACA,SACA,SACA,QACA,UAGJsB,QAAS,CAAC,kBAAmB,iBAAkB,KAAM,QACrDC,cAAe,gBACfrE,UAAW,CACTsE,KAAM,CAAC,OAAQ,SACf5J,KAAM,CAAC,OAAQ,QAAS,MAAO,OAAQ,SAAU,QACjD6J,SAAU,CAAC,OAAQ,SACnBp9B,IAAK,CAAC,OAAQ,UAEhBq9B,SAAU,CACR1O,MAAO,CAAC2O,UAAU,EAAMz6B,KAAM,aAEhC06B,MAAO,CAAC,UACRC,SAAU,CACR,IACA,IACA,aACA,KACA,OACA,KACA,MACA,UACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,MAIA,QACA,MACA,MACA,KACA,KACA,IACA,UACA,MACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,OACA,SACA,SACA,MACA,UACA,MACA,QACA,QACA,KACA,QACA,KACA,QACA,KACA,KACA,KACA,QCYE,GAAM,CAAC,EAAEpgC,eAgDf,SAASqgC,GAAU9uB,EAAO/L,GACxB,GAAIA,GAAwB,iBAATA,EAAmB,CACpC,MAAMwkB,EAA0D,EAGhE,OAFoC,iBAAhBA,EAAOvkB,KAAoBukB,EAAOvkB,KAAO,IAG3D,IAAK,UACH,OAkCR,SAAiB8L,EAAOyY,GACtB,GAAIzY,EAAM+uB,OAAOC,cAAe,CAE9B,MAAM16B,EAAiC,iBAAjBmkB,EAAOznB,MAAqBynB,EAAOznB,MAAQ,GAC3DuD,EAAQD,EAAOmnB,QAAQ,UAIvBxnB,EAAO,CAACC,KAAM,UAAWlD,MAHjBuD,EAAQ,EAAID,EAASA,EAAOW,MAAM,EAAGV,IAOnD,OAFA06B,GAAMh7B,EAAMwkB,GAELxkB,CACT,CACF,CAhDe2Y,CAAQ5M,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,EAAWnkB,EAAOiD,GAC/B,OAAO5G,EAAQuhD,OACbz5B,EAAUha,WAAW,GACrBlH,EAAIkH,WAAWnK,EAAQ,GACvB3D,EAEJ,CACF,CCjFA,MAAM8pD,GAAmB,aCAzB,MAAMC,GAAe,KCKd,MAAMC,GAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,GAAyB,CACpCC,KAAM,IACNC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,IAAK,IACLhqD,KAAM,IACNiqD,KAAM,IACNC,MAAO,IACPC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,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","sources":["webpack://example/../node_modules/classnames/index.js","webpack://example/../node_modules/extend/index.js","webpack://example/../gatsby-theme-academic/src/utils/hooks.js","webpack://example/../node_modules/remark-parse/node_modules/mdast-util-to-string/lib/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-util-chunked/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-util-subtokenize/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-util-combine-extensions/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-util-character/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-factory-space/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark/lib/initialize/content.js","webpack://example/../node_modules/remark-parse/node_modules/micromark/lib/initialize/document.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/content.js","webpack://example/../node_modules/remark-parse/node_modules/micromark/lib/initialize/flow.js","webpack://example/../node_modules/remark-parse/node_modules/micromark/lib/initialize/text.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-util-resolve-all/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark/lib/create-tokenizer.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/list.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-factory-destination/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-factory-label/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-factory-title/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-factory-whitespace/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-util-normalize-identifier/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/definition.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-util-html-tag-name/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://example/../node_modules/decode-named-character-reference/index.dom.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/label-end.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-util-classify-character/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/attention.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/autolink.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/html-text.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-core-commonmark/lib/code-text.js","webpack://example/../node_modules/remark-parse/node_modules/micromark/lib/constructs.js","webpack://example/../node_modules/remark-parse/node_modules/micromark/lib/parse.js","webpack://example/../node_modules/remark-parse/node_modules/micromark/lib/preprocess.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark-util-decode-string/index.js","webpack://example/../node_modules/remark-parse/node_modules/unist-util-stringify-position/lib/index.js","webpack://example/../node_modules/remark-parse/node_modules/mdast-util-from-markdown/lib/index.js","webpack://example/../node_modules/remark-parse/node_modules/micromark/lib/postprocess.js","webpack://example/../node_modules/zwitch/index.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/configure.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://example/../node_modules/remark-stringify/node_modules/unist-util-is/lib/index.js","webpack://example/../node_modules/remark-stringify/node_modules/unist-util-visit-parents/lib/index.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-string/lib/index.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://example/../node_modules/remark-stringify/node_modules/unist-util-visit/lib/index.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-phrasing/lib/index.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://example/../node_modules/longest-streak/index.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/join.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/unsafe.js","webpack://example/../node_modules/remark-stringify/node_modules/micromark-util-decode-string/index.js","webpack://example/../node_modules/remark-stringify/node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/association.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/compile-pattern.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-flow.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/safe.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/track.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/index.js","webpack://example/../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","webpack://example/../node_modules/remark/node_modules/bail/index.js","webpack://example/../node_modules/is-plain-obj/index.js","webpack://example/../node_modules/trough/lib/index.js","webpack://example/../node_modules/vfile-message/node_modules/unist-util-stringify-position/lib/index.js","webpack://example/../node_modules/vfile-message/lib/index.js","webpack://example/../node_modules/vfile/lib/minpath.browser.js","webpack://example/../node_modules/vfile/lib/minproc.browser.js","webpack://example/../node_modules/vfile/lib/minurl.shared.js","webpack://example/../node_modules/vfile/lib/minurl.browser.js","webpack://example/../node_modules/vfile/lib/index.js","webpack://example/../node_modules/remark/node_modules/unified/lib/callable-instance.js","webpack://example/../node_modules/remark/node_modules/unified/lib/index.js","webpack://example/../node_modules/remark/index.js","webpack://example/../node_modules/remark-parse/lib/index.js","webpack://example/../node_modules/remark-stringify/lib/index.js","webpack://example/../node_modules/remark-external-links/node_modules/unist-util-is/lib/index.js","webpack://example/../node_modules/remark-external-links/node_modules/unist-util-visit-parents/lib/index.js","webpack://example/../node_modules/remark-external-links/node_modules/unist-util-visit/lib/index.js","webpack://example/../node_modules/remark-external-links/node_modules/mdast-util-definitions/lib/index.js","webpack://example/../node_modules/space-separated-tokens/index.js","webpack://example/../node_modules/remark-external-links/node_modules/is-absolute-url/index.js","webpack://example/../node_modules/remark-external-links/index.js","webpack://example/../node_modules/@ungap/structured-clone/esm/types.js","webpack://example/../node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://example/../node_modules/@ungap/structured-clone/esm/serialize.js","webpack://example/../node_modules/@ungap/structured-clone/esm/index.js","webpack://example/../node_modules/hast-util-sanitize/node_modules/unist-util-position/lib/index.js","webpack://example/../node_modules/hast-util-sanitize/lib/schema.js","webpack://example/../node_modules/hast-util-sanitize/lib/index.js","webpack://example/../node_modules/mdast-util-to-hast/node_modules/micromark-util-character/index.js","webpack://example/../node_modules/mdast-util-to-hast/node_modules/micromark-util-sanitize-uri/index.js","webpack://example/../node_modules/mdast-util-to-hast/lib/footer.js","webpack://example/../node_modules/mdast-util-to-hast/node_modules/unist-util-is/lib/index.js","webpack://example/../node_modules/mdast-util-to-hast/node_modules/unist-util-visit-parents/lib/index.js","webpack://example/../node_modules/mdast-util-to-hast/node_modules/unist-util-position/lib/index.js","webpack://example/../node_modules/mdast-util-to-hast/lib/revert.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://example/../node_modules/trim-lines/index.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://example/../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://example/../node_modules/mdast-util-to-hast/lib/state.js","webpack://example/../node_modules/mdast-util-to-hast/node_modules/unist-util-visit/lib/index.js","webpack://example/../node_modules/mdast-util-to-hast/lib/index.js","webpack://example/../node_modules/remark-html/node_modules/html-void-elements/index.js","webpack://example/../node_modules/property-information/lib/util/schema.js","webpack://example/../node_modules/property-information/lib/util/merge.js","webpack://example/../node_modules/property-information/lib/normalize.js","webpack://example/../node_modules/property-information/lib/util/info.js","webpack://example/../node_modules/property-information/lib/util/types.js","webpack://example/../node_modules/property-information/lib/util/defined-info.js","webpack://example/../node_modules/property-information/lib/util/create.js","webpack://example/../node_modules/property-information/lib/xlink.js","webpack://example/../node_modules/property-information/lib/xml.js","webpack://example/../node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://example/../node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://example/../node_modules/property-information/lib/xmlns.js","webpack://example/../node_modules/property-information/lib/aria.js","webpack://example/../node_modules/property-information/lib/html.js","webpack://example/../node_modules/property-information/lib/svg.js","webpack://example/../node_modules/property-information/index.js","webpack://example/../node_modules/stringify-entities/lib/core.js","webpack://example/../node_modules/stringify-entities/lib/util/to-hexadecimal.js","webpack://example/../node_modules/stringify-entities/lib/util/to-decimal.js","webpack://example/../node_modules/stringify-entities/node_modules/character-entities-legacy/index.js","webpack://example/../node_modules/character-entities-html4/index.js","webpack://example/../node_modules/stringify-entities/lib/constant/dangerous.js","webpack://example/../node_modules/stringify-entities/lib/util/to-named.js","webpack://example/../node_modules/stringify-entities/lib/util/format-smart.js","webpack://example/../node_modules/stringify-entities/lib/index.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/handle/comment.js","webpack://example/../node_modules/ccount/index.js","webpack://example/../node_modules/comma-separated-tokens/index.js","webpack://example/../node_modules/property-information/lib/find.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-whitespace/lib/index.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/omission/util/siblings.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/omission/omission.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/omission/closing.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/omission/opening.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/handle/element.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/handle/text.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/handle/index.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/handle/doctype.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/handle/raw.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/handle/root.js","webpack://example/../node_modules/remark-html/node_modules/hast-util-to-html/lib/index.js","webpack://example/../node_modules/remark-html/lib/index.js","webpack://example/../gatsby-theme-academic/src/utils/commonUtils.mjs","webpack://example/../gatsby-theme-academic/src/utils/pageUtils.mjs","webpack://example/../src/image-utils.ts","webpack://example/../src/components/hooks.ts","webpack://example/../src/components/layout-wrapper.tsx","webpack://example/../src/components/picture.tsx","webpack://example/../src/components/placeholder.tsx","webpack://example/../src/components/main-image.tsx","webpack://example/../src/components/gatsby-image.server.tsx","webpack://example/../src/components/gatsby-image.browser.tsx","webpack://example/../src/components/static-image.server.tsx","webpack://example/../src/components/static-image.tsx","webpack://example/../node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://example/../node_modules/lodash/_DataView.js","webpack://example/../node_modules/lodash/_Hash.js","webpack://example/../node_modules/lodash/_LazyWrapper.js","webpack://example/../node_modules/lodash/_ListCache.js","webpack://example/../node_modules/lodash/_LodashWrapper.js","webpack://example/../node_modules/lodash/_Map.js","webpack://example/../node_modules/lodash/_MapCache.js","webpack://example/../node_modules/lodash/_Promise.js","webpack://example/../node_modules/lodash/_Set.js","webpack://example/../node_modules/lodash/_Stack.js","webpack://example/../node_modules/lodash/_Symbol.js","webpack://example/../node_modules/lodash/_Uint8Array.js","webpack://example/../node_modules/lodash/_WeakMap.js","webpack://example/../node_modules/lodash/_apply.js","webpack://example/../node_modules/lodash/_arrayEach.js","webpack://example/../node_modules/lodash/_arrayFilter.js","webpack://example/../node_modules/lodash/_arrayIncludes.js","webpack://example/../node_modules/lodash/_arrayLikeKeys.js","webpack://example/../node_modules/lodash/_arrayMap.js","webpack://example/../node_modules/lodash/_arrayPush.js","webpack://example/../node_modules/lodash/_assignValue.js","webpack://example/../node_modules/lodash/_assocIndexOf.js","webpack://example/../node_modules/lodash/_baseAssign.js","webpack://example/../node_modules/lodash/_baseAssignIn.js","webpack://example/../node_modules/lodash/_baseAssignValue.js","webpack://example/../node_modules/lodash/_baseClone.js","webpack://example/../node_modules/lodash/_baseCreate.js","webpack://example/../node_modules/lodash/_baseFindIndex.js","webpack://example/../node_modules/lodash/_baseFlatten.js","webpack://example/../node_modules/lodash/_baseGet.js","webpack://example/../node_modules/lodash/_baseGetAllKeys.js","webpack://example/../node_modules/lodash/_baseGetTag.js","webpack://example/../node_modules/lodash/_baseIndexOf.js","webpack://example/../node_modules/lodash/_baseIsArguments.js","webpack://example/../node_modules/lodash/_baseIsMap.js","webpack://example/../node_modules/lodash/_baseIsNaN.js","webpack://example/../node_modules/lodash/_baseIsNative.js","webpack://example/../node_modules/lodash/_baseIsSet.js","webpack://example/../node_modules/lodash/_baseIsTypedArray.js","webpack://example/../node_modules/lodash/_baseKeys.js","webpack://example/../node_modules/lodash/_baseKeysIn.js","webpack://example/../node_modules/lodash/_baseLodash.js","webpack://example/../node_modules/lodash/_baseSetData.js","webpack://example/../node_modules/lodash/_baseSetToString.js","webpack://example/../node_modules/lodash/_baseSlice.js","webpack://example/../node_modules/lodash/_baseTimes.js","webpack://example/../node_modules/lodash/_baseToString.js","webpack://example/../node_modules/lodash/_baseTrim.js","webpack://example/../node_modules/lodash/_baseUnary.js","webpack://example/../node_modules/lodash/_baseUnset.js","webpack://example/../node_modules/lodash/_castPath.js","webpack://example/../node_modules/lodash/_cloneArrayBuffer.js","webpack://example/../node_modules/lodash/_cloneBuffer.js","webpack://example/../node_modules/lodash/_cloneDataView.js","webpack://example/../node_modules/lodash/_cloneRegExp.js","webpack://example/../node_modules/lodash/_cloneSymbol.js","webpack://example/../node_modules/lodash/_cloneTypedArray.js","webpack://example/../node_modules/lodash/_composeArgs.js","webpack://example/../node_modules/lodash/_composeArgsRight.js","webpack://example/../node_modules/lodash/_copyArray.js","webpack://example/../node_modules/lodash/_copyObject.js","webpack://example/../node_modules/lodash/_copySymbols.js","webpack://example/../node_modules/lodash/_copySymbolsIn.js","webpack://example/../node_modules/lodash/_coreJsData.js","webpack://example/../node_modules/lodash/_countHolders.js","webpack://example/../node_modules/lodash/_createBind.js","webpack://example/../node_modules/lodash/_createCtor.js","webpack://example/../node_modules/lodash/_createCurry.js","webpack://example/../node_modules/lodash/_createHybrid.js","webpack://example/../node_modules/lodash/_createPartial.js","webpack://example/../node_modules/lodash/_createRecurry.js","webpack://example/../node_modules/lodash/_createWrap.js","webpack://example/../node_modules/lodash/_customOmitClone.js","webpack://example/../node_modules/lodash/_defineProperty.js","webpack://example/../node_modules/lodash/_flatRest.js","webpack://example/../node_modules/lodash/_freeGlobal.js","webpack://example/../node_modules/lodash/_getAllKeys.js","webpack://example/../node_modules/lodash/_getAllKeysIn.js","webpack://example/../node_modules/lodash/_getData.js","webpack://example/../node_modules/lodash/_getFuncName.js","webpack://example/../node_modules/lodash/_getHolder.js","webpack://example/../node_modules/lodash/_getMapData.js","webpack://example/../node_modules/lodash/_getNative.js","webpack://example/../node_modules/lodash/_getPrototype.js","webpack://example/../node_modules/lodash/_getRawTag.js","webpack://example/../node_modules/lodash/_getSymbols.js","webpack://example/../node_modules/lodash/_getSymbolsIn.js","webpack://example/../node_modules/lodash/_getTag.js","webpack://example/../node_modules/lodash/_getValue.js","webpack://example/../node_modules/lodash/_getWrapDetails.js","webpack://example/../node_modules/lodash/_hashClear.js","webpack://example/../node_modules/lodash/_hashDelete.js","webpack://example/../node_modules/lodash/_hashGet.js","webpack://example/../node_modules/lodash/_hashHas.js","webpack://example/../node_modules/lodash/_hashSet.js","webpack://example/../node_modules/lodash/_initCloneArray.js","webpack://example/../node_modules/lodash/_initCloneByTag.js","webpack://example/../node_modules/lodash/_initCloneObject.js","webpack://example/../node_modules/lodash/_insertWrapDetails.js","webpack://example/../node_modules/lodash/_isFlattenable.js","webpack://example/../node_modules/lodash/_isIndex.js","webpack://example/../node_modules/lodash/_isKey.js","webpack://example/../node_modules/lodash/_isKeyable.js","webpack://example/../node_modules/lodash/_isLaziable.js","webpack://example/../node_modules/lodash/_isMasked.js","webpack://example/../node_modules/lodash/_isPrototype.js","webpack://example/../node_modules/lodash/_listCacheClear.js","webpack://example/../node_modules/lodash/_listCacheDelete.js","webpack://example/../node_modules/lodash/_listCacheGet.js","webpack://example/../node_modules/lodash/_listCacheHas.js","webpack://example/../node_modules/lodash/_listCacheSet.js","webpack://example/../node_modules/lodash/_mapCacheClear.js","webpack://example/../node_modules/lodash/_mapCacheDelete.js","webpack://example/../node_modules/lodash/_mapCacheGet.js","webpack://example/../node_modules/lodash/_mapCacheHas.js","webpack://example/../node_modules/lodash/_mapCacheSet.js","webpack://example/../node_modules/lodash/_memoizeCapped.js","webpack://example/../node_modules/lodash/_mergeData.js","webpack://example/../node_modules/lodash/_metaMap.js","webpack://example/../node_modules/lodash/_nativeCreate.js","webpack://example/../node_modules/lodash/_nativeKeys.js","webpack://example/../node_modules/lodash/_nativeKeysIn.js","webpack://example/../node_modules/lodash/_nodeUtil.js","webpack://example/../node_modules/lodash/_objectToString.js","webpack://example/../node_modules/lodash/_overArg.js","webpack://example/../node_modules/lodash/_overRest.js","webpack://example/../node_modules/lodash/_parent.js","webpack://example/../node_modules/lodash/_realNames.js","webpack://example/../node_modules/lodash/_reorder.js","webpack://example/../node_modules/lodash/_replaceHolders.js","webpack://example/../node_modules/lodash/_root.js","webpack://example/../node_modules/lodash/_setData.js","webpack://example/../node_modules/lodash/_setToString.js","webpack://example/../node_modules/lodash/_setWrapToString.js","webpack://example/../node_modules/lodash/_shortOut.js","webpack://example/../node_modules/lodash/_stackClear.js","webpack://example/../node_modules/lodash/_stackDelete.js","webpack://example/../node_modules/lodash/_stackGet.js","webpack://example/../node_modules/lodash/_stackHas.js","webpack://example/../node_modules/lodash/_stackSet.js","webpack://example/../node_modules/lodash/_strictIndexOf.js","webpack://example/../node_modules/lodash/_stringToPath.js","webpack://example/../node_modules/lodash/_toKey.js","webpack://example/../node_modules/lodash/_toSource.js","webpack://example/../node_modules/lodash/_trimmedEndIndex.js","webpack://example/../node_modules/lodash/_updateWrapDetails.js","webpack://example/../node_modules/lodash/_wrapperClone.js","webpack://example/../node_modules/lodash/constant.js","webpack://example/../node_modules/lodash/curry.js","webpack://example/../node_modules/lodash/eq.js","webpack://example/../node_modules/lodash/flatten.js","webpack://example/../node_modules/lodash/identity.js","webpack://example/../node_modules/lodash/isArguments.js","webpack://example/../node_modules/lodash/isArray.js","webpack://example/../node_modules/lodash/isArrayLike.js","webpack://example/../node_modules/lodash/isBuffer.js","webpack://example/../node_modules/lodash/isFunction.js","webpack://example/../node_modules/lodash/isLength.js","webpack://example/../node_modules/lodash/isMap.js","webpack://example/../node_modules/lodash/isObject.js","webpack://example/../node_modules/lodash/isObjectLike.js","webpack://example/../node_modules/lodash/isPlainObject.js","webpack://example/../node_modules/lodash/isSet.js","webpack://example/../node_modules/lodash/isSymbol.js","webpack://example/../node_modules/lodash/isTypedArray.js","webpack://example/../node_modules/lodash/keys.js","webpack://example/../node_modules/lodash/keysIn.js","webpack://example/../node_modules/lodash/last.js","webpack://example/../node_modules/lodash/memoize.js","webpack://example/../node_modules/lodash/noop.js","webpack://example/../node_modules/lodash/omit.js","webpack://example/../node_modules/lodash/stubArray.js","webpack://example/../node_modules/lodash/stubFalse.js","webpack://example/../node_modules/lodash/toFinite.js","webpack://example/../node_modules/lodash/toInteger.js","webpack://example/../node_modules/lodash/toNumber.js","webpack://example/../node_modules/lodash/toString.js","webpack://example/../node_modules/lodash/wrapperLodash.js","webpack://example/../node_modules/process/browser.js","webpack://example/../node_modules/rsuite/esm/Col/Col.js","webpack://example/../node_modules/rsuite/esm/Col/index.js","webpack://example/../node_modules/rsuite/esm/CustomProvider/CustomProvider.js","webpack://example/../node_modules/rsuite/esm/utils/constants.js","webpack://example/../node_modules/rsuite/esm/utils/prefix.js","webpack://example/../node_modules/rsuite/esm/utils/useClassNames.js","webpack://example/../node_modules/@babel/runtime/helpers/esm/extends.js","webpack://example/../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/* eslint-disable import/prefer-default-export */\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { useState, useEffect } from 'react';\n\nconst THEME_MODE = 'theme-mode';\nconst getThemeMode = () => {\n  const savedThemeMode = window.localStorage.getItem(THEME_MODE);\n  if (savedThemeMode === 'dark' || savedThemeMode === 'light') return savedThemeMode;\n  return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n};\n\nexport const useTheme = () => {\n  const [themeMode, setThemeMode] = useState(getThemeMode());\n  const themeClassName = `rs-theme-${themeMode}`;\n  window.document.body.classList.add(themeClassName);\n\n  useEffect(() => {\n    const initialMode = getThemeMode();\n    if (initialMode !== themeMode) {\n      const initialThemeClassName = `rs-theme-${initialMode}`;\n      window.localStorage.setItem(THEME_MODE, themeMode);\n      window.document.body.classList.remove(initialThemeClassName);\n      window.document.body.classList.add(themeClassName);\n      // window.location.reload();\n    }\n  }, [themeMode]);\n\n  return [themeMode, setThemeMode];\n};\n\n/**\n * custom hook to detect the window size of a browser\n * @return {Array} [height, width ].\n */\nexport const useWindowSize = () => {\n  const [size, setSize] = useState([0, 0]);\n  useEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n};\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          pathPrefix\n          siteUrl\n          title\n          description\n          author\n          authorAlternative\n          introduction\n          avatar\n          professions\n          tocMaxDepth\n          excerptMaxLength\n          birthday\n          location\n          email\n          postsForArchivePage\n          social {\n            url\n            icon\n          }\n          disqusScript\n          contactFormUrl\n          pages {\n            home\n            posts\n            contact\n            resume\n            tags\n            research\n          }\n          wakatime {\n            username\n            activity\n            language\n            editor\n            os\n          }\n          interests {\n            icon\n            title\n          }\n          education {\n            date\n            icon\n            title\n            location\n          }\n          experience {\n            title\n            position\n            data {\n              date\n              title\n              location\n              description\n            }\n          }\n          awards {\n            date\n            title\n          }\n          tags {\n            id\n            name\n            description\n            color\n          }\n        }\n      }\n    }\n  `);\n  return data.site.siteMetadata;\n};\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {State} base\n * @param {Options} extension\n * @returns {State}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {keyof Options} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'extensions': {\n          // Empty.\n          break\n        }\n\n        /* c8 ignore next 4 */\n        case 'unsafe': {\n          list(base[key], extension[key])\n          break\n        }\n\n        case 'join': {\n          list(base[key], extension[key])\n          break\n        }\n\n        case 'handlers': {\n          map(base[key], extension[key])\n          break\n        }\n\n        default: {\n          // @ts-expect-error: matches.\n          base.options[key] = extension[key]\n        }\n      }\n    }\n  }\n\n  return base\n}\n\n/**\n * @template T\n * @param {Array<T>} left\n * @param {Array<T> | null | undefined} right\n */\nfunction list(left, right) {\n  if (right) {\n    left.push(...right)\n  }\n}\n\n/**\n * @template T\n * @param {Record<string, T>} left\n * @param {Record<string, T> | null | undefined} right\n */\nfunction map(left, right) {\n  if (right) {\n    Object.assign(left, right)\n  }\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('./types.js').Join} Join\n */\n\nimport {formatCodeAsIndented} from './util/format-code-as-indented.js'\nimport {formatHeadingAsSetext} from './util/format-heading-as-setext.js'\n\n/** @type {Array<Join>} */\nexport const join = [joinDefaults]\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, state) {\n  // Indented code after list or another indented code.\n  if (\n    right.type === 'code' &&\n    formatCodeAsIndented(right, state) &&\n    (left.type === 'list' ||\n      (left.type === right.type && formatCodeAsIndented(left, state)))\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, state)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","/**\n * @typedef {import('./types.js').ConstructName} ConstructName\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain things like attention (emphasis, strong), images, or links.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * @type {Array<ConstructName>}\n */\nconst fullPhrasingSpans = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {Array<Unsafe>} */\nexport const unsafe = [\n  {character: '\\t', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: '\\t', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {character: ' ', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: ' ', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {\n    character: '!',\n    after: '\\\\[',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  // A left paren followed by `]` could make something into a link or image.\n  {\n    before: '\\\\]',\n    character: '(',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*', after: '(?:[ \\t\\r\\n*])'},\n  {character: '*', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+', after: '(?:[ \\t\\r\\n])'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-', after: '(?:[ \\t\\r\\n-])'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {\n    character: '<',\n    after: '[!/?A-Za-z]',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  {character: '[', inConstruct: ['label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {character: ']', inConstruct: ['label', 'reference']},\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {character: '_', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedMetaGraveAccent']\n  },\n  {character: '`', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').CompilePattern} CompilePattern\n */\n\n/**\n * @type {CompilePattern}\n */\nexport function compilePattern(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').FlowParents} FlowParents\n * @typedef {import('../types.js').FlowChildren} FlowChildren\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {FlowParents} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {FlowChildren} left\n * @param {FlowChildren} right\n * @param {FlowParents} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('./types.js').Enter} Enter\n * @typedef {import('./types.js').Info} Info\n * @typedef {import('./types.js').Join} Join\n * @typedef {import('./types.js').FlowParents} FlowParents\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').PhrasingParents} PhrasingParents\n * @typedef {import('./types.js').SafeConfig} SafeConfig\n * @typedef {import('./types.js').State} State\n * @typedef {import('./types.js').TrackFields} TrackFields\n */\n\nimport {zwitch} from 'zwitch'\nimport {configure} from './configure.js'\nimport {handle as handlers} from './handle/index.js'\nimport {join} from './join.js'\nimport {unsafe} from './unsafe.js'\nimport {association} from './util/association.js'\nimport {compilePattern} from './util/compile-pattern.js'\nimport {containerPhrasing} from './util/container-phrasing.js'\nimport {containerFlow} from './util/container-flow.js'\nimport {indentLines} from './util/indent-lines.js'\nimport {safe} from './util/safe.js'\nimport {track} from './util/track.js'\n\n/**\n * Turn an mdast syntax tree into markdown.\n *\n * @param {Nodes} tree\n *   Tree to serialize.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized markdown representing `tree`.\n */\nexport function toMarkdown(tree, options = {}) {\n  /** @type {State} */\n  const state = {\n    enter,\n    indentLines,\n    associationId: association,\n    containerPhrasing: containerPhrasingBound,\n    containerFlow: containerFlowBound,\n    createTracker: track,\n    compilePattern,\n    safe: safeBound,\n    stack: [],\n    unsafe: [...unsafe],\n    join: [...join],\n    // @ts-expect-error: GFM / frontmatter are typed in `mdast` but not defined\n    // here.\n    handlers: {...handlers},\n    options: {},\n    indexStack: [],\n    // @ts-expect-error: add `handle` in a second.\n    handle: undefined\n  }\n\n  configure(state, options)\n\n  if (state.options.tightDefinitions) {\n    state.join.push(joinDefinition)\n  }\n\n  state.handle = zwitch('type', {\n    invalid,\n    unknown,\n    handlers: state.handlers\n  })\n\n  let result = state.handle(tree, undefined, state, {\n    before: '\\n',\n    after: '\\n',\n    now: {line: 1, column: 1},\n    lineShift: 0\n  })\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  /** @type {Enter} */\n  function enter(name) {\n    state.stack.push(name)\n    return exit\n\n    /**\n     * @returns {undefined}\n     */\n    function exit() {\n      state.stack.pop()\n    }\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {never}\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * @param {unknown} value\n * @returns {never}\n */\nfunction unknown(value) {\n  // Always a node.\n  const node = /** @type {Nodes} */ (value)\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/** @type {Join} */\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {PhrasingParents} parent\n *   Parent of flow nodes.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nfunction containerPhrasingBound(parent, info) {\n  return containerPhrasing(parent, this, info)\n}\n\n/**\n * Serialize the children of a parent that contains flow children.\n *\n * These children will typically be joined by blank lines.\n * What they are joined by exactly is defined by `Join` functions.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {FlowParents} parent\n *   Parent of flow nodes.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nfunction containerFlowBound(parent, info) {\n  return containerFlow(parent, this, info)\n}\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {string | null | undefined} value\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nfunction safeBound(value, config) {\n  return safe(this, value, config)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').PhrasingParents} PhrasingParents\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {PhrasingParents} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Note: types exposed from `index.d.ts`\nimport remarkParse from 'remark-parse'\nimport remarkStringify from 'remark-stringify'\nimport {unified} from 'unified'\n\n/**\n * Create a new unified processor that already uses `remark-parse` and\n * `remark-stringify`.\n */\nexport const remark = unified().use(remarkParse).use(remarkStringify).freeze()\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownOptions\n * @typedef {import('unified').Compiler<Root, string>} Compiler\n * @typedef {import('unified').Processor<undefined, undefined, undefined, Root, string>} Processor\n */\n\n/**\n * @typedef {Omit<ToMarkdownOptions, 'extensions'>} Options\n */\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\n/**\n * Add support for serializing to markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkStringify(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.compiler = compiler\n\n  /**\n   * @type {Compiler}\n   */\n  function compiler(tree) {\n    return toMarkdown(tree, {\n      ...self.data('settings'),\n      ...options,\n      // Note: this option is not in the readme.\n      // The goal is for it to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('toMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\n\n// Windows paths like `c:\\`\nconst WINDOWS_PATH_REGEX = /^[a-zA-Z]:\\\\/;\n\nexport default function isAbsoluteUrl(url) {\n\tif (typeof url !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof url}\\``);\n\t}\n\n\tif (WINDOWS_PATH_REGEX.test(url)) {\n\t\treturn false;\n\t}\n\n\treturn ABSOLUTE_URL_REGEX.test(url);\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element['children'][number]} ElementChild\n *\n * @typedef Options\n *   Configuration.\n * @property {'_self'|'_blank'|'_parent'|'_top'|false} [target='_blank']\n *   How to display referenced documents (`string?`: `_self`, `_blank`,\n *   `_parent`, or `_top`, default: `_blank`).\n *   Pass `false` to not set `target`s on links.\n * @property {string[]|string|false} [rel=['nofollow', 'noopener', 'noreferrer']]\n *   Link types to hint about the referenced documents.\n *   Pass `false` to not set `rel`s on links.\n *\n *   > When using a `target`, add `noopener` and `noreferrer` to avoid\n *   > exploitation of the `window.opener` API.\n * @property {string[]} [protocols=['http', 'https']]\n *   Protocols to check, such as `mailto` or `tel`.\n * @property {ElementChild|ElementChild[]} [content]\n *   hast content to insert at the end of external links.\n *   Will be inserted in a `<span>` element.\n *\n *   Useful for improving accessibility by [giving users advanced warning when\n *   opening a new window.\n * @property {Properties} [contentProperties]\n *   `Properties` to add to the `span` wrapping `content`, when given.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {definitions} from 'mdast-util-definitions'\nimport {parse} from 'space-separated-tokens'\nimport absolute from 'is-absolute-url'\nimport extend from 'extend'\n\nconst defaultTarget = '_blank'\nconst defaultRel = ['nofollow', 'noopener', 'noreferrer']\nconst defaultProtocols = ['http', 'https']\n\n/**\n * Plugin to automatically add `target` and `rel` attributes to external links.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkExternalLinks(options = {}) {\n  const target = options.target\n  const rel = typeof options.rel === 'string' ? parse(options.rel) : options.rel\n  const protocols = options.protocols || defaultProtocols\n  const content =\n    options.content && !Array.isArray(options.content)\n      ? [options.content]\n      : options.content\n  const contentProperties = options.contentProperties || {}\n\n  return (tree) => {\n    const definition = definitions(tree)\n\n    visit(tree, (node) => {\n      if (node.type === 'link' || node.type === 'linkReference') {\n        const ctx = node.type === 'link' ? node : definition(node.identifier)\n\n        // Undefined references can be injected into the tree by plugins.\n        /* c8 ignore next */\n        if (!ctx) return\n\n        const protocol = ctx.url.slice(0, ctx.url.indexOf(':'))\n\n        if (absolute(ctx.url) && protocols.includes(protocol)) {\n          const data = node.data || (node.data = {})\n          const props = /** @type {Properties} */ (\n            data.hProperties || (data.hProperties = {})\n          )\n\n          if (target !== false) {\n            props.target = target || defaultTarget\n          }\n\n          if (rel !== false) {\n            props.rel = (rel || defaultRel).concat()\n          }\n\n          if (content) {\n            // `fragment` is not a known mdast node, but unknown nodes with\n            // children are handled as elements by `mdast-util-to-hast`:\n            // See: <https://github.com/syntax-tree/mdast-util-to-hast#notes>.\n            node.children.push({\n              // @ts-expect-error\n              type: 'fragment',\n              children: [],\n              data: {\n                hName: 'span',\n                hProperties: extend(true, contentProperties),\n                hChildren: extend(true, content)\n              }\n            })\n          }\n        }\n      }\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","// Couple of ARIA attributes allowed in several, but not all, places.\nconst aria = ['ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy']\n\n/**\n * Default schema.\n *\n * Follows GitHub style sanitation.\n *\n * @type {import('./index.js').Schema}\n */\nexport const defaultSchema = {\n  ancestors: {\n    tbody: ['table'],\n    td: ['table'],\n    th: ['table'],\n    thead: ['table'],\n    tfoot: ['table'],\n    tr: ['table']\n  },\n  attributes: {\n    a: [\n      ...aria,\n      // Note: these 3 are used by GFM footnotes, they do work on all links.\n      'dataFootnoteBackref',\n      'dataFootnoteRef',\n      ['className', 'data-footnote-backref'],\n      'href'\n    ],\n    blockquote: ['cite'],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `code` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    code: [['className', /^language-./]],\n    del: ['cite'],\n    div: ['itemScope', 'itemType'],\n    dl: [...aria],\n    // Note: this is used by GFM footnotes.\n    h2: [['className', 'sr-only']],\n    img: [...aria, 'longDesc', 'src'],\n    // Note: `input` is not normally allowed by GH, when manually writing\n    // it in markdown, they add it from tasklists some other way.\n    // We can’t do that, so we have to allow it.\n    input: [\n      ['disabled', true],\n      ['type', 'checkbox']\n    ],\n    ins: ['cite'],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `li` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    li: [['className', 'task-list-item']],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `ol` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    ol: [...aria, ['className', 'contains-task-list']],\n    q: ['cite'],\n    section: ['dataFootnotes', ['className', 'footnotes']],\n    source: ['srcSet'],\n    summary: [...aria],\n    table: [...aria],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `ol` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    ul: [...aria, ['className', 'contains-task-list']],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'colSpan',\n      'color',\n      'cols',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      // Note: `disabled` is technically allowed on all elements by GH.\n      // But it is useless on everything except `input`.\n      // Because `input`s are normally not allowed, but we allow them for\n      // checkboxes due to tasklists, we allow `disabled` only there.\n      'encType',\n      'frame',\n      'hSpace',\n      'headers',\n      'height',\n      'hrefLang',\n      'htmlFor',\n      'id',\n      'isMap',\n      'itemProp',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rev',\n      'rowSpan',\n      'rows',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'title',\n      'useMap',\n      'vAlign',\n      'value',\n      'width'\n    ]\n  },\n  clobber: ['ariaDescribedBy', 'ariaLabelledBy', 'id', 'name'],\n  clobberPrefix: 'user-content-',\n  protocols: {\n    cite: ['http', 'https'],\n    href: ['http', 'https', 'irc', 'ircs', 'mailto', 'xmpp'],\n    longDesc: ['http', 'https'],\n    src: ['http', 'https']\n  },\n  required: {\n    input: {disabled: true, type: 'checkbox'}\n  },\n  strip: ['script'],\n  tagNames: [\n    'a',\n    'b',\n    'blockquote',\n    'br',\n    'code',\n    'dd',\n    'del',\n    'details',\n    'div',\n    'dl',\n    'dt',\n    'em',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'hr',\n    'i',\n    'img',\n    // Note: `input` is not normally allowed by GH, when manually writing\n    // it in markdown, they add it from tasklists some other way.\n    // We can’t do that, so we have to allow it.\n    'input',\n    'ins',\n    'kbd',\n    'li',\n    'ol',\n    'p',\n    'picture',\n    'pre',\n    'q',\n    'rp',\n    'rt',\n    'ruby',\n    's',\n    'samp',\n    'section',\n    'source',\n    'span',\n    'strike',\n    'strong',\n    'sub',\n    'summary',\n    'sup',\n    'table',\n    'tbody',\n    'td',\n    'tfoot',\n    'th',\n    'thead',\n    'tr',\n    'tt',\n    'ul',\n    'var'\n  ]\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n */\n\n/**\n * @typedef {[string, ...Array<Exclude<Properties[keyof Properties], Array<any>> | RegExp>] | string} PropertyDefinition\n *   Definition for a property.\n *\n * @typedef Schema\n *   Schema that defines what nodes and properties are allowed.\n *\n *   The default schema is `defaultSchema`, which follows how GitHub cleans.\n *   If any top-level key is missing in the given schema, the corresponding\n *   value of the default schema is used.\n *\n *   To extend the standard schema with a few changes, clone `defaultSchema`\n *   like so:\n *\n *   ```js\n *   import deepmerge from 'deepmerge'\n *   import {h} from 'hastscript'\n *   import {defaultSchema, sanitize} from 'hast-util-sanitize'\n *\n *   // This allows `className` on all elements.\n *   const schema = deepmerge(defaultSchema, {attributes: {'*': ['className']}})\n *\n *   const tree = sanitize(h('div', {className: ['foo']}), schema)\n *\n *   // `tree` still has `className`.\n *   console.log(tree)\n *   // {\n *   //   type: 'element',\n *   //   tagName: 'div',\n *   //   properties: {className: ['foo']},\n *   //   children: []\n *   // }\n *   ```\n * @property {boolean | null | undefined} [allowComments=false]\n *   Whether to allow comment nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowComments: true\n *   ```\n * @property {boolean | null | undefined} [allowDoctypes=false]\n *   Whether to allow doctype nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowDoctypes: true\n *   ```\n * @property {Record<string, Array<string>> | null | undefined} [ancestors]\n *   Map of tag names to a list of tag names which are required ancestors\n *   (default: `defaultSchema.ancestors`).\n *\n *   Elements with these tag names will be ignored if they occur outside of one\n *   of their allowed parents.\n *\n *   For example:\n *\n *   ```js\n *   ancestors: {\n *     tbody: ['table'],\n *     // …\n *     tr: ['table']\n *   }\n *   ```\n * @property {Record<string, Array<PropertyDefinition>> | null | undefined} [attributes]\n *   Map of tag names to allowed property names (default:\n *   `defaultSchema.attributes`).\n *\n *   The special key `'*'` as a tag name defines property names allowed on all\n *   elements.\n *\n *   The special value `'data*'` as a property name can be used to allow all\n *   `data` properties.\n *\n *   For example:\n *\n *   ```js\n *   attributes: {\n *     'ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy', …, 'href'\n *     // …\n *     '*': [\n *       'abbr',\n *       'accept',\n *       'acceptCharset',\n *       // …\n *       'vAlign',\n *       'value',\n *       'width'\n *     ]\n *   }\n *   ```\n *\n *   Instead of a single string in the array, which allows any property value\n *   for the field, you can use an array to allow several values.\n *   For example, `input: ['type']` allows `type` set to any value on `input`s.\n *   But `input: [['type', 'checkbox', 'radio']]` allows `type` when set to\n *   `'checkbox'` or `'radio'`.\n *\n *   You can use regexes, so for example `span: [['className', /^hljs-/]]`\n *   allows any class that starts with `hljs-` on `span`s.\n *\n *   When comma- or space-separated values are used (such as `className`), each\n *   value in is checked individually.\n *   For example, to allow certain classes on `span`s for syntax highlighting,\n *   use `span: [['className', 'number', 'operator', 'token']]`.\n *   This will allow `'number'`, `'operator'`, and `'token'` classes, but drop\n *   others.\n * @property {Array<string> | null | undefined} [clobber]\n *   List of property names that clobber (default: `defaultSchema.clobber`).\n *\n *   For example:\n *\n *   ```js\n *   clobber: ['ariaDescribedBy', 'ariaLabelledBy', 'id', 'name']\n *   ```\n * @property {string | null | undefined} [clobberPrefix]\n *   Prefix to use before clobbering properties (default:\n *   `defaultSchema.clobberPrefix`).\n *\n *   For example:\n *\n *   ```js\n *   clobberPrefix: 'user-content-'\n *   ```\n * @property {Record<string, Array<string> | null | undefined> | null | undefined} [protocols]\n *   Map of *property names* to allowed protocols (default:\n *   `defaultSchema.protocols`).\n *\n *   This defines URLs that are always allowed to have local URLs (relative to\n *   the current website, such as `this`, `#this`, `/this`, or `?this`), and\n *   only allowed to have remote URLs (such as `https://example.com`) if they\n *   use a known protocol.\n *\n *   For example:\n *\n *   ```js\n *   protocols: {\n *     cite: ['http', 'https'],\n *     // …\n *     src: ['http', 'https']\n *   }\n *   ```\n * @property {Record<string, Record<string, Properties[keyof Properties]>> | null | undefined} [required]\n *   Map of tag names to required property names with a default value\n *   (default: `defaultSchema.required`).\n *\n *   This defines properties that must be set.\n *   If a field does not exist (after the element was made safe), these will be\n *   added with the given value.\n *\n *   For example:\n *\n *   ```js\n *   required: {\n *     input: {disabled: true, type: 'checkbox'}\n *   }\n *   ```\n *\n *   > 👉 **Note**: properties are first checked based on `schema.attributes`,\n *   > then on `schema.required`.\n *   > That means properties could be removed by `attributes` and then added\n *   > again with `required`.\n * @property {Array<string> | null | undefined} [strip]\n *   List of tag names to strip from the tree (default: `defaultSchema.strip`).\n *\n *   By default, unsafe elements (those not in `schema.tagNames`) are replaced\n *   by what they contain.\n *   This option can drop their contents.\n *\n *   For example:\n *\n *   ```js\n *   strip: ['script']\n *   ```\n * @property {Array<string> | null | undefined} [tagNames]\n *   List of allowed tag names (default: `defaultSchema.tagNames`).\n *\n *   For example:\n *\n *   ```js\n *   tagNames: [\n *     'a',\n *     'b',\n *     // …\n *     'ul',\n *     'var'\n *   ]\n *   ```\n *\n * @typedef State\n *   Info passed around.\n * @property {Readonly<Schema>} schema\n *   Schema.\n * @property {Array<string>} stack\n *   Tag names of ancestors.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {position} from 'unist-util-position'\nimport {defaultSchema} from './schema.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Sanitize a tree.\n *\n * @param {Readonly<Nodes>} node\n *   Unsafe tree.\n * @param {Readonly<Schema> | null | undefined} [options]\n *   Configuration (default: `defaultSchema`).\n * @returns {Nodes}\n *   New, safe tree.\n */\nexport function sanitize(node, options) {\n  /** @type {Nodes} */\n  let ctx = {type: 'root', children: []}\n\n  /** @type {State} */\n  const state = {\n    schema: options ? {...defaultSchema, ...options} : defaultSchema,\n    stack: []\n  }\n  const replace = transform(state, node)\n\n  if (replace) {\n    if (Array.isArray(replace)) {\n      if (replace.length === 1) {\n        ctx = replace[0]\n      } else {\n        ctx.children = replace\n      }\n    } else {\n      ctx = replace\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} node\n *   Unsafe node.\n * @returns {Array<ElementContent> | Nodes | undefined}\n *   Safe result.\n */\nfunction transform(state, node) {\n  if (node && typeof node === 'object') {\n    const unsafe = /** @type {Record<string, Readonly<unknown>>} */ (node)\n    const type = typeof unsafe.type === 'string' ? unsafe.type : ''\n\n    switch (type) {\n      case 'comment': {\n        return comment(state, unsafe)\n      }\n\n      case 'doctype': {\n        return doctype(state, unsafe)\n      }\n\n      case 'element': {\n        return element(state, unsafe)\n      }\n\n      case 'root': {\n        return root(state, unsafe)\n      }\n\n      case 'text': {\n        return text(state, unsafe)\n      }\n\n      default:\n    }\n  }\n}\n\n/**\n * Make a safe comment.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe comment-like value.\n * @returns {Comment | undefined}\n *   Safe comment (if with `allowComments`).\n */\nfunction comment(state, unsafe) {\n  if (state.schema.allowComments) {\n    // See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n    const result = typeof unsafe.value === 'string' ? unsafe.value : ''\n    const index = result.indexOf('-->')\n    const value = index < 0 ? result : result.slice(0, index)\n\n    /** @type {Comment} */\n    const node = {type: 'comment', value}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe doctype.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe doctype-like value.\n * @returns {Doctype | undefined}\n *   Safe doctype (if with `allowDoctypes`).\n */\nfunction doctype(state, unsafe) {\n  if (state.schema.allowDoctypes) {\n    /** @type {Doctype} */\n    const node = {type: 'doctype'}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe element-like value.\n * @returns {Array<ElementContent> | Element | undefined}\n *   Safe element.\n */\nfunction element(state, unsafe) {\n  const name = typeof unsafe.tagName === 'string' ? unsafe.tagName : ''\n\n  state.stack.push(name)\n\n  const content = /** @type {Array<ElementContent>} */ (\n    children(state, unsafe.children)\n  )\n  const props = properties(state, unsafe.properties)\n\n  state.stack.pop()\n\n  let safeElement = false\n\n  if (\n    name &&\n    name !== '*' &&\n    (!state.schema.tagNames || state.schema.tagNames.includes(name))\n  ) {\n    safeElement = true\n\n    // Some nodes can break out of their context if they don’t have a certain\n    // ancestor.\n    if (state.schema.ancestors && own.call(state.schema.ancestors, name)) {\n      const ancestors = state.schema.ancestors[name]\n      let index = -1\n\n      safeElement = false\n\n      while (++index < ancestors.length) {\n        if (state.stack.includes(ancestors[index])) {\n          safeElement = true\n        }\n      }\n    }\n  }\n\n  if (!safeElement) {\n    return state.schema.strip && !state.schema.strip.includes(name)\n      ? content\n      : undefined\n  }\n\n  /** @type {Element} */\n  const node = {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: content\n  }\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe root-like value.\n * @returns {Root}\n *   Safe root.\n */\nfunction root(state, unsafe) {\n  const content = /** @type {Array<RootContent>} */ (\n    children(state, unsafe.children)\n  )\n\n  /** @type {Root} */\n  const node = {type: 'root', children: content}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe text-like value.\n * @returns {Text}\n *   Safe text.\n */\nfunction text(_, unsafe) {\n  const value = typeof unsafe.value === 'string' ? unsafe.value : ''\n  /** @type {Text} */\n  const node = {type: 'text', value}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make children safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} children\n *   Unsafe value.\n * @returns {Array<Nodes>}\n *   Safe children.\n */\nfunction children(state, children) {\n  /** @type {Array<Nodes>} */\n  const results = []\n\n  if (Array.isArray(children)) {\n    const childrenUnknown = /** @type {Array<Readonly<unknown>>} */ (children)\n    let index = -1\n\n    while (++index < childrenUnknown.length) {\n      const value = transform(state, childrenUnknown[index])\n\n      if (value) {\n        if (Array.isArray(value)) {\n          results.push(...value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n  }\n\n  return results\n}\n\n/**\n * Make element properties safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} properties\n *   Unsafe value.\n * @returns {Properties}\n *   Safe value.\n */\nfunction properties(state, properties) {\n  const tagName = state.stack[state.stack.length - 1]\n  const attributes = state.schema.attributes\n  const required = state.schema.required\n  const specific =\n    attributes && own.call(attributes, tagName)\n      ? attributes[tagName]\n      : undefined\n  const defaults =\n    attributes && own.call(attributes, '*') ? attributes['*'] : undefined\n  const props = /** @type {Readonly<Record<string, Readonly<unknown>>>} */ (\n    properties && typeof properties === 'object' ? properties : {}\n  )\n  /** @type {Properties} */\n  const result = {}\n  /** @type {string} */\n  let key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      const unsafe = props[key]\n      let safe = propertyValue(\n        state,\n        findDefinition(specific, key),\n        key,\n        unsafe\n      )\n\n      if (safe === null || safe === undefined) {\n        safe = propertyValue(state, findDefinition(defaults, key), key, unsafe)\n      }\n\n      if (safe !== null && safe !== undefined) {\n        result[key] = safe\n      }\n    }\n  }\n\n  if (required && own.call(required, tagName)) {\n    const properties = required[tagName]\n\n    for (key in properties) {\n      if (own.call(properties, key) && !own.call(result, key)) {\n        result[key] = properties[key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition> | undefined} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value (but an array).\n * @returns {Array<number | string> | boolean | number | string | undefined}\n *   Safe value.\n */\nfunction propertyValue(state, definition, key, value) {\n  return definition\n    ? Array.isArray(value)\n      ? propertyValueMany(state, definition, key, value)\n      : propertyValuePrimitive(state, definition, key, value)\n    : undefined\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<Array<Readonly<unknown>>>} values\n *   Unsafe value (but an array).\n * @returns {Array<number | string>}\n *   Safe value.\n */\nfunction propertyValueMany(state, definition, key, values) {\n  let index = -1\n  /** @type {Array<number | string>} */\n  const result = []\n\n  while (++index < values.length) {\n    const value = propertyValuePrimitive(state, definition, key, values[index])\n\n    if (typeof value === 'number' || typeof value === 'string') {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value which is a primitive.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value (but not an array).\n * @returns {boolean | number | string | undefined}\n *   Safe value.\n */\nfunction propertyValuePrimitive(state, definition, key, value) {\n  if (\n    typeof value !== 'boolean' &&\n    typeof value !== 'number' &&\n    typeof value !== 'string'\n  ) {\n    return\n  }\n\n  if (!safeProtocol(state, key, value)) {\n    return\n  }\n\n  // Just a string, or only one item in an array, means all values are OK.\n  // More than one item means an allow list.\n  if (typeof definition === 'object' && definition.length > 1) {\n    let ok = false\n    let index = 0 // Ignore `key`, which is the first item.\n\n    while (++index < definition.length) {\n      const allowed = definition[index]\n\n      // Expression.\n      if (allowed && typeof allowed === 'object' && 'flags' in allowed) {\n        if (allowed.test(String(value))) {\n          ok = true\n          break\n        }\n      }\n      // Primitive.\n      else if (allowed === value) {\n        ok = true\n        break\n      }\n    }\n\n    if (!ok) return\n  }\n\n  return state.schema.clobber &&\n    state.schema.clobberPrefix &&\n    state.schema.clobber.includes(key)\n    ? state.schema.clobberPrefix + value\n    : value\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value.\n * @returns {boolean}\n *   Whether it’s a safe value.\n */\nfunction safeProtocol(state, key, value) {\n  const protocols =\n    state.schema.protocols && own.call(state.schema.protocols, key)\n      ? state.schema.protocols[key]\n      : undefined\n\n  // No protocols defined? Then everything is fine.\n  if (!protocols || protocols.length === 0) {\n    return true\n  }\n\n  const url = String(value)\n  const colon = url.indexOf(':')\n  const questionMark = url.indexOf('?')\n  const numberSign = url.indexOf('#')\n  const slash = url.indexOf('/')\n\n  if (\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length) === protocol\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Add data and position.\n *\n * @param {Nodes} node\n *   Node to patch safe data and position on.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe node-like value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(node, unsafe) {\n  const cleanPosition = position(\n    // @ts-expect-error: looks like a node.\n    unsafe\n  )\n\n  if (unsafe.data) {\n    node.data = structuredClone(unsafe.data)\n  }\n\n  if (cleanPosition) node.position = cleanPosition\n}\n\n/**\n *\n * @param {Readonly<Array<PropertyDefinition>> | undefined} definitions\n * @param {string} key\n * @returns {Readonly<PropertyDefinition> | undefined}\n */\nfunction findDefinition(definitions, key) {\n  /** @type {PropertyDefinition | undefined} */\n  let dataDefault\n  let index = -1\n\n  if (definitions) {\n    while (++index < definitions.length) {\n      const entry = definitions[index]\n      const name = typeof entry === 'string' ? entry : entry[0]\n\n      if (name === key) {\n        return entry\n      }\n\n      if (name === 'data*') dataDefault = entry\n    }\n  }\n\n  if (key.length > 4 && key.slice(0, 4).toLowerCase() === 'data') {\n    return dataDefault\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef CoreOptions\n * @property {ReadonlyArray<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\nconst defaultSubsetRegex = /[\"&'<>`]/g\nconst surrogatePairsRegex = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\nconst controlCharactersRegex =\n  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\nconst regexEscapeRegex = /[|\\\\{}()[\\]^$+*?.]/g\n\n/** @type {WeakMap<ReadonlyArray<string>, RegExp>} */\nconst subsetToRegexCache = new WeakMap()\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset\n      ? charactersToExpressionCached(options.subset)\n      : defaultSubsetRegex,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(surrogatePairsRegex, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(controlCharactersRegex, basic)\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * A wrapper function that caches the result of `charactersToExpression` with a WeakMap.\n * This can improve performance when tooling calls `charactersToExpression` repeatedly\n * with the same subset.\n *\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpressionCached(subset) {\n  let cached = subsetToRegexCache.get(subset)\n\n  if (!cached) {\n    cached = charactersToExpression(subset)\n    subsetToRegexCache.set(subset, cached)\n  }\n\n  return cached\n}\n\n/**\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(regexEscapeRegex, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","const hexadecimalRegex = /[\\dA-Fa-f]/\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !hexadecimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","const decimalRegex = /\\d/\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !decimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\nconst notAlphanumericRegex = /[^\\dA-Za-z]/\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          notAlphanumericRegex.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>']\nconst commentEntitySubset = ['<', '>']\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/** @type {Array<RootContent>} */\nconst emptyChildren = []\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren\n    let offset = (index || 0) + increment\n    let next = siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  body,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array<string>} */\n  const seen = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {find, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {closing} from '../omission/closing.js'\nimport {opening} from '../omission/opening.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attributes = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false\n\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attributes.charAt(attributes.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&']\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: textEntitySubset\n        })\n      )\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_)\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n// Make VS code see references to the above types.\n''\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('../index.js').State} State\n */\n\n// Make VS code see references to the above types.\n''\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('stringify-entities').Options} StringifyEntitiesOptions\n */\n\n/**\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\n *   Do not encode some characters which cause XSS vulnerabilities in older\n *   browsers (default: `false`).\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\n *\n *   When `false`, `Raw` nodes are encoded.\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowParseErrors=false]\n *   Do not encode characters which cause parse errors (even though they work),\n *   to save bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [bogusComments=false]\n *   Use “bogus comments” instead of comments to save byes: `<?charlie>`\n *   instead of `<!--charlie-->` (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {CharacterReferences | null | undefined} [characterReferences]\n *   Configure how to serialize character references (optional).\n * @property {boolean | null | undefined} [closeEmptyElements=false]\n *   Close SVG elements without any content with slash (`/`) on the opening tag\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\n *   (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the HTML space.\n * @property {boolean | null | undefined} [closeSelfClosing=false]\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\n *   `<img>` (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\n *   `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: boolean attributes (such as `hidden`) are always collapsed.\n * @property {boolean | null | undefined} [omitOptionalTags=false]\n *   Omit optional opening and closing tags (default: `false`).\n *\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\n *   tags can be omitted.\n *   The first because it’s followed by another `li`, the last because it’s\n *   followed by nothing.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [preferUnquoted=false]\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\n *\n *   Not used in the SVG space.\n * @property {Quote | null | undefined} [quote='\"']\n *   Preferred quote to use (default: `'\"'`).\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it (default: `'html'`).\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use [`xast`][xast] if you need to support SVG as XML.\n * @property {boolean | null | undefined} [tightAttributes=false]\n *   Join attributes together, without whitespace, if possible: get\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\n *   bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\n *   Join known comma-separated attribute values with just a comma (`,`),\n *   instead of padding them on the right as well (`,␠`, where `␠` represents a\n *   space) (default: `false`).\n * @property {boolean | null | undefined} [tightDoctype=false]\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\n *   `<!doctype html>` to save bytes (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n *\n *   > 👉 **Note**: only used if `closeSelfClosing: true` or\n *   > `closeEmptyElements: true`.\n * @property {boolean | null | undefined} [upperDoctype=false]\n *   Use a `<!DOCTYPE…` instead of `<!doctype…` (default: `false`).\n *\n *   Useless except for XHTML.\n * @property {ReadonlyArray<string> | null | undefined} [voids]\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: It’s highly unlikely that you want to pass this, because\n *   > hast is not for XML, and HTML will not add more void elements.\n *\n * @typedef {'\"' | \"'\"} Quote\n *   HTML quotes for attribute values.\n *\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\n *   Serialize one node.\n * @property {(node: Parents | undefined) => string} all\n *   Serialize the children of a parent node.\n * @property {Settings} settings\n *   User configuration.\n * @property {Schema} schema\n *   Current schema.\n * @property {Quote} quote\n *   Preferred quote.\n * @property {Quote} alternative\n *   Alternative quote.\n */\n\nimport {htmlVoidElements} from 'html-void-elements'\nimport {html, svg} from 'property-information'\nimport {handle} from './handle/index.js'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {}\n\n/** @type {Array<never>} */\nconst emptyChildren = []\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nexport function toHtml(tree, options) {\n  const options_ = options || emptyOptions\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || emptyChildren\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","/**\n * @typedef {import('hast-util-sanitize').Schema} Schema\n * @typedef {import('hast-util-to-html').Options} ToHtmlOptions\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-to-hast').Handlers} Handlers\n * @typedef {import('unified').Compiler<Root, string>} Compiler\n * @typedef {import('unified').Processor<undefined, undefined, undefined, Root, string>} Processor\n */\n\n/**\n * @typedef ExtraOptionsFields\n *   Extra fields.\n * @property {Readonly<Handlers> | null | undefined} [handlers]\n *   How to turn mdast nodes into hast nodes (optional);\n *   passed to `mdast-util-to-hast`.\n * @property {Readonly<Schema> | boolean | null | undefined} [sanitize]\n *   Sanitize the output, and how (default: `true`).\n *\n * @typedef {ToHtmlOptions & ExtraOptionsFields} Options\n *   Configuration.\n */\n\nimport {sanitize} from 'hast-util-sanitize'\nimport {toHast} from 'mdast-util-to-hast'\nimport {toHtml} from 'hast-util-to-html'\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Serialize markdown as HTML.\n *\n * ###### Notes\n *\n * Passing `sanitize: false` is dangerous.\n * It allows arbitrary HTML and does not sanitize elements.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkHtml(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = this\n  const {handlers, sanitize: clean, ...toHtmlOptions} = options || emptyOptions\n  let allowDangerousHtml = false\n  /** @type {Readonly<Schema> | undefined} */\n  let schema\n\n  if (typeof clean === 'boolean') {\n    allowDangerousHtml = !clean\n  } else if (clean) {\n    schema = clean\n  }\n\n  self.compiler = compiler\n\n  /**\n   * @type {Compiler}\n   */\n  function compiler(tree, file) {\n    const hast = toHast(tree, {handlers, allowDangerousHtml})\n    const safeHast = allowDangerousHtml ? hast : sanitize(hast, schema)\n    const result = toHtml(safeHast, {...toHtmlOptions, allowDangerousHtml})\n\n    if (file.extname) {\n      file.extname = '.html'\n    }\n\n    // Add an eof eol.\n    return tree &&\n      tree.type === 'root' &&\n      result &&\n      /[^\\r\\n]/.test(result.charAt(result.length - 1))\n      ? result + '\\n'\n      : result\n  }\n}\n","/* eslint-disable no-param-reassign */\n\nimport moment from 'moment';\n// const moment = require('moment');\n\n// const EXCERPT_MAX_LENGTH = pageMetaData.excerptMaxLength || 500;\n\n// const Statistics = require('../../content/statistics.json');\n\n// const tags = _(Statistics.tags).map((value, key) => ({\n//   name: key, ...value,\n// })).orderBy(['count', 'name'], ['desc', 'asc']).value();\n//\n// const researchTags = _.filter(tags, { research: true });\n// const postsTags = _.filter(tags, { posts: true });\n\nconst CommonUtils = {\n  /**\n     * Generate full url, use localhost in dev mode\n     * @param siteMetaData\n     * @param path\n     * @returns {string}\n     */\n  generateFullUrl: (siteMetaData, ...path) => {\n    let urlPrefix;\n    if (process && process.env.NODE_ENV !== 'production') {\n      urlPrefix = 'http://127.0.0.1:8000/';\n    } else {\n      urlPrefix = siteMetaData.siteUrl;\n      if (siteMetaData.pathPrefix) {\n        if (\n          urlPrefix[urlPrefix.length - 1] !== '/' &&\n                    siteMetaData.pathPrefix[0] !== '/'\n        ) {\n          urlPrefix += '/';\n        }\n        urlPrefix += siteMetaData.pathPrefix;\n      }\n    }\n    if (urlPrefix[urlPrefix.length - 1] === '/') {\n      urlPrefix = urlPrefix.substring(0, urlPrefix.length - 1);\n    }\n    return urlPrefix + CommonUtils.resolveUrl(...path);\n  },\n\n  /**\n     * Join provided url paths.\n     * @param {...string} paths Provided paths. It doesn't matter if they have trailing slash.\n     * @return {string} Resolved url without trailing slash.\n     */\n  resolveUrl: (...paths) =>\n    paths.reduce((resolvedUrl, path) => {\n      const urlPath = path.toString().trim();\n      if (urlPath) {\n        // eslint-disable-next-line no-param-reassign\n        resolvedUrl +=\n                    (resolvedUrl === '' ? '' : '/') + urlPath.replace(/^\\/|\\/$/g, '');\n      }\n\n      resolvedUrl = resolvedUrl[0] !== '/' ? `/${resolvedUrl}` : resolvedUrl;\n      return resolvedUrl;\n    }, ''),\n  /**\n     * Resolve a page url adding a trailing slash.\n     * Needed to prevent 301 redirects cause of Gatsby.js' folder structure.\n     * @param {...string} path Provided paths. It doesn't matter if they have trailing slash.\n     * @return {string} Resolved url with trailing slash.\n     */\n  resolvePageUrl: (...path) => {\n    const resolvedUrl = CommonUtils.resolveUrl(...path);\n    return resolvedUrl;\n  },\n  /**\n     * Get an ordered list of suggested posts for a single post.\n     * @param {Object} post The single post of which to find the related posts.\n     * It's the returned object from Graphql's query `mdx`\n     * @param {Array} postList The list where find related posts. It's the returned\n     * object from Graphql's query `allMdx`\n     * @param {number} limit The maximum number of suggested posts to get\n     * @return {Array} The `postList` object sorted according to the best match with the `post` object\n     */\n  getSuggestedPosts: (post, postList, limit) => {\n    // Get the number of common tags with provided post.\n    const getTagScore = (edge) => {\n      let commonTags = 0;\n      edge.node.frontmatter.tags.forEach((tag) => {\n        commonTags += post.frontmatter.tags.indexOf(tag) !== -1 ? 1 : 0;\n      });\n      return commonTags;\n    };\n\n    return postList.edges\n      .sort((edgeA, edgeB) => getTagScore(edgeB) - getTagScore(edgeA))\n      .slice(0, limit);\n  },\n  /**\n     * Pass a post and retrieve a list of related translations.\n     * @param {Object} post The post of which retrieve its translations.\n     * It accepts a `node` object from Graphql's query `allMdx`\n     * @param {Object} postList The list of posts where search translations.\n     * It accepts a `edges` array from Graphql's query `allMdx`\n     * @return {Object} An array of objects with languages as keys (ISO 639-1) and\n     * translated post's paths as values.\n     */\n  getRelatedTranslations: (options, post, postList) =>\n    postList\n      .filter(\n        ({ node }) =>\n        // Get posts in the same folder of provided post\n        // eslint-disable-next-line implicit-arrow-linebreak\n          node.internal.contentFilePath.split('/').slice(-2, -1)[0] ===\n          post.internal.contentFilePath.split('/').slice(-2, -1)[0],\n      )\n      .map(({ node }) => {\n        const lang = node.internal.contentFilePath.split('.').slice(-2, -1)[0];\n        return {\n          hreflang: lang.slice(-5) !== 'index' ? lang : options.defaultLanguage,\n          path: CommonUtils.resolvePageUrl(node.frontmatter.path),\n        };\n      }),\n  /**\n     * Capitalize passed string\n     * @param {string} str string to capitalize\n     * @return {string} string with first letter to uppercase\n     */\n  capitalize: (str) => str[0].toUpperCase() + str.slice(1),\n  generateOmittedPostInfo: (node) => {\n    const regex = /(?<=content\\/)(posts|research)\\/.*(?=\\/index\\.md)/g;\n    const contentFilePath = node.internal.contentFilePath || '';\n    const matches = contentFilePath.match(regex);\n    if (matches && matches.length === 1 && !node.frontmatter.path) {\n      // eslint-disable-next-line prefer-destructuring\n      node.frontmatter.path = matches[0];\n    }\n  },\n\n  formatDate: (date) => {\n    const d = moment(date);\n    if (d.isValid()) {\n      return d.format('MMM Do YYYY');\n    }\n    return date;\n  },\n\n};\n\nexport default CommonUtils;\n","/* eslint-disable no-param-reassign */\n\nimport { remark } from 'remark';\nimport externalLinks from 'remark-external-links';\nimport html from 'remark-html';\n\nimport CommonUtils from './commonUtils.mjs';\n\n// const EXCERPT_MAX_LENGTH = pageMetaData.excerptMaxLength || 500;\n\n// const Statistics = require('../../content/statistics.json');\n\n// const tags = _(Statistics.tags).map((value, key) => ({\n//   name: key, ...value,\n// })).orderBy(['count', 'name'], ['desc', 'asc']).value();\n//\n// const researchTags = _.filter(tags, { research: true });\n// const postsTags = _.filter(tags, { posts: true });\n\nconst PageUtils = {\n  ...CommonUtils,\n\n  parseMarkDown: (str, removeParagraph = false) => {\n    try {\n      // @type string\n      let md = remark()\n        .use(externalLinks, {\n          target: '_blank',\n          rel: 'nofollow',\n        })\n        .use(html)\n        .processSync(str)\n        .toString();\n      if (removeParagraph) {\n        const regex = /^<p>(.*)<\\/p>/g;\n        const match = regex.exec(md);\n        if (match.length > 0) {\n          [, md] = match;\n        }\n      }\n      return md;\n    } catch (e) {\n      return str;\n    }\n  },\n\n  trimExcerpt: (excerpt, excerptMaxLength = 500) => {\n    if (!excerpt) return '';\n    if (excerpt.length < excerptMaxLength) return excerpt;\n    return `${excerpt.substring(0, excerptMaxLength)} ...`;\n  },\n};\n\nexport default PageUtils;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @constructor\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\n  this.__views__ = [];\n}\n\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nmodule.exports = LazyWrapper;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\n */\nfunction LodashWrapper(value, chainAll) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__chain__ = !!chainAll;\n  this.__index__ = 0;\n  this.__values__ = undefined;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/**\n * The function whose prototype chain sequence wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nmodule.exports = baseLodash;\n","var identity = require('./identity'),\n    metaMap = require('./_metaMap');\n\n/**\n * The base implementation of `setData` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar baseSetData = !metaMap ? identity : function(func, data) {\n  metaMap.set(func, data);\n  return func;\n};\n\nmodule.exports = baseSetData;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array that is the composition of partially applied arguments,\n * placeholders, and provided arguments into a single array of arguments.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to prepend to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgs(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersLength = holders.length,\n      leftIndex = -1,\n      leftLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(leftLength + rangeLength),\n      isUncurried = !isCurried;\n\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n  while (++argsIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[holders[argsIndex]] = args[argsIndex];\n    }\n  }\n  while (rangeLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n  return result;\n}\n\nmodule.exports = composeArgs;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This function is like `composeArgs` except that the arguments composition\n * is tailored for `_.partialRight`.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to append to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgsRight(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersIndex = -1,\n      holdersLength = holders.length,\n      rightIndex = -1,\n      rightLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(rangeLength + rightLength),\n      isUncurried = !isCurried;\n\n  while (++argsIndex < rangeLength) {\n    result[argsIndex] = args[argsIndex];\n  }\n  var offset = argsIndex;\n  while (++rightIndex < rightLength) {\n    result[offset + rightIndex] = partials[rightIndex];\n  }\n  while (++holdersIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[offset + holders[holdersIndex]] = args[argsIndex++];\n    }\n  }\n  return result;\n}\n\nmodule.exports = composeArgsRight;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Gets the number of `placeholder` occurrences in `array`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} placeholder The placeholder to search for.\n * @returns {number} Returns the placeholder count.\n */\nfunction countHolders(array, placeholder) {\n  var length = array.length,\n      result = 0;\n\n  while (length--) {\n    if (array[length] === placeholder) {\n      ++result;\n    }\n  }\n  return result;\n}\n\nmodule.exports = countHolders;\n","var createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the optional `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createBind(func, bitmask, thisArg) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, arguments);\n  }\n  return wrapper;\n}\n\nmodule.exports = createBind;\n","var baseCreate = require('./_baseCreate'),\n    isObject = require('./isObject');\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtor;\n","var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    createHybrid = require('./_createHybrid'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createCurry;\n","var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    countHolders = require('./_countHolders'),\n    createCtor = require('./_createCtor'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    reorder = require('./_reorder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybrid;\n","var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the `this` binding\n * of `thisArg` and `partials` prepended to the arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to\n *  the new function.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createPartial(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength),\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    return apply(fn, isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createPartial;\n","var isLaziable = require('./_isLaziable'),\n    setData = require('./_setData'),\n    setWrapToString = require('./_setWrapToString');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * Creates a function that wraps `func` to continue currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {Function} wrapFunc The function to create the `func` wrapper.\n * @param {*} placeholder The placeholder value.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n  var isCurry = bitmask & WRAP_CURRY_FLAG,\n      newHolders = isCurry ? holders : undefined,\n      newHoldersRight = isCurry ? undefined : holders,\n      newPartials = isCurry ? partials : undefined,\n      newPartialsRight = isCurry ? undefined : partials;\n\n  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n  }\n  var newData = [\n    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n    newHoldersRight, argPos, ary, arity\n  ];\n\n  var result = wrapFunc.apply(undefined, newData);\n  if (isLaziable(func)) {\n    setData(result, newData);\n  }\n  result.placeholder = placeholder;\n  return setWrapToString(result, func, bitmask);\n}\n\nmodule.exports = createRecurry;\n","var baseSetData = require('./_baseSetData'),\n    createBind = require('./_createBind'),\n    createCurry = require('./_createCurry'),\n    createHybrid = require('./_createHybrid'),\n    createPartial = require('./_createPartial'),\n    getData = require('./_getData'),\n    mergeData = require('./_mergeData'),\n    setData = require('./_setData'),\n    setWrapToString = require('./_setWrapToString'),\n    toInteger = require('./toInteger');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that either curries or invokes `func` with optional\n * `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags.\n *    1 - `_.bind`\n *    2 - `_.bindKey`\n *    4 - `_.curry` or `_.curryRight` of a bound function\n *    8 - `_.curry`\n *   16 - `_.curryRight`\n *   32 - `_.partial`\n *   64 - `_.partialRight`\n *  128 - `_.rearg`\n *  256 - `_.ary`\n *  512 - `_.flip`\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to be partially applied.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n  if (!isBindKey && typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var length = partials ? partials.length : 0;\n  if (!length) {\n    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n    partials = holders = undefined;\n  }\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n  arity = arity === undefined ? arity : toInteger(arity);\n  length -= holders ? holders.length : 0;\n\n  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n    var partialsRight = partials,\n        holdersRight = holders;\n\n    partials = holders = undefined;\n  }\n  var data = isBindKey ? undefined : getData(func);\n\n  var newData = [\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n    argPos, ary, arity\n  ];\n\n  if (data) {\n    mergeData(newData, data);\n  }\n  func = newData[0];\n  bitmask = newData[1];\n  thisArg = newData[2];\n  partials = newData[3];\n  holders = newData[4];\n  arity = newData[9] = newData[9] === undefined\n    ? (isBindKey ? 0 : func.length)\n    : nativeMax(newData[9] - length, 0);\n\n  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n  }\n  if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n    var result = createBind(func, bitmask, thisArg);\n  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n    result = createCurry(func, bitmask, arity);\n  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n    result = createPartial(func, bitmask, thisArg, partials);\n  } else {\n    result = createHybrid.apply(undefined, newData);\n  }\n  var setter = data ? baseSetData : setData;\n  return setWrapToString(setter(result, newData), func, bitmask);\n}\n\nmodule.exports = createWrap;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var metaMap = require('./_metaMap'),\n    noop = require('./noop');\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n","var realNames = require('./_realNames');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nmodule.exports = getFuncName;\n","/**\n * Gets the argument placeholder value for `func`.\n *\n * @private\n * @param {Function} func The function to inspect.\n * @returns {*} Returns the placeholder value.\n */\nfunction getHolder(func) {\n  var object = func;\n  return object.placeholder;\n}\n\nmodule.exports = getHolder;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/** Used to match wrap detail comments. */\nvar reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n    reSplitDetails = /,? & /;\n\n/**\n * Extracts wrapper details from the `source` body comment.\n *\n * @private\n * @param {string} source The source to inspect.\n * @returns {Array} Returns the wrapper details.\n */\nfunction getWrapDetails(source) {\n  var match = source.match(reWrapDetails);\n  return match ? match[1].split(reSplitDetails) : [];\n}\n\nmodule.exports = getWrapDetails;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","/** Used to match wrap detail comments. */\nvar reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/;\n\n/**\n * Inserts wrapper `details` in a comment at the top of the `source` body.\n *\n * @private\n * @param {string} source The source to modify.\n * @returns {Array} details The details to insert.\n * @returns {string} Returns the modified source.\n */\nfunction insertWrapDetails(source, details) {\n  var length = details.length;\n  if (!length) {\n    return source;\n  }\n  var lastIndex = length - 1;\n  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n  details = details.join(length > 2 ? ', ' : ' ');\n  return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n}\n\nmodule.exports = insertWrapDetails;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Merges the function metadata of `source` into `data`.\n *\n * Merging metadata reduces the number of wrappers used to invoke a function.\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n * may be applied regardless of execution order. Methods like `_.ary` and\n * `_.rearg` modify function arguments, making the order in which they are\n * executed important, preventing the merging of metadata. However, we make\n * an exception for a safe combined case where curried functions have `_.ary`\n * and or `_.rearg` applied.\n *\n * @private\n * @param {Array} data The destination metadata.\n * @param {Array} source The source metadata.\n * @returns {Array} Returns `data`.\n */\nfunction mergeData(data, source) {\n  var bitmask = data[1],\n      srcBitmask = source[1],\n      newBitmask = bitmask | srcBitmask,\n      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n  var isCombo =\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n  // Exit early if metadata can't be merged.\n  if (!(isCommon || isCombo)) {\n    return data;\n  }\n  // Use source `thisArg` if available.\n  if (srcBitmask & WRAP_BIND_FLAG) {\n    data[2] = source[2];\n    // Set when currying a bound function.\n    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n  }\n  // Compose partial arguments.\n  var value = source[3];\n  if (value) {\n    var partials = data[3];\n    data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n  }\n  // Compose partial right arguments.\n  value = source[5];\n  if (value) {\n    partials = data[5];\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n  }\n  // Use source `argPos` if available.\n  value = source[7];\n  if (value) {\n    data[7] = value;\n  }\n  // Use source `ary` if it's smaller.\n  if (srcBitmask & WRAP_ARY_FLAG) {\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n  }\n  // Use source `arity` if one is not provided.\n  if (data[9] == null) {\n    data[9] = source[9];\n  }\n  // Use source `func` and merge bitmasks.\n  data[0] = source[0];\n  data[1] = newBitmask;\n\n  return data;\n}\n\nmodule.exports = mergeData;\n","var WeakMap = require('./_WeakMap');\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nmodule.exports = metaMap;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","/** Used to lookup unminified function names. */\nvar realNames = {};\n\nmodule.exports = realNames;\n","var copyArray = require('./_copyArray'),\n    isIndex = require('./_isIndex');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Reorder `array` according to the specified indexes where the element at\n * the first index is assigned as the first element, the element at\n * the second index is assigned as the second element, and so on.\n *\n * @private\n * @param {Array} array The array to reorder.\n * @param {Array} indexes The arranged array indexes.\n * @returns {Array} Returns `array`.\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n      length = nativeMin(indexes.length, arrLength),\n      oldArray = copyArray(array);\n\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\n\nmodule.exports = reorder;\n","/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value === placeholder || value === PLACEHOLDER) {\n      array[index] = PLACEHOLDER;\n      result[resIndex++] = index;\n    }\n  }\n  return result;\n}\n\nmodule.exports = replaceHolders;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var baseSetData = require('./_baseSetData'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets metadata for `func`.\n *\n * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n * period of time, it will trip its breaker and transition to an identity\n * function to avoid garbage collection pauses in V8. See\n * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n * for more details.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar setData = shortOut(baseSetData);\n\nmodule.exports = setData;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var getWrapDetails = require('./_getWrapDetails'),\n    insertWrapDetails = require('./_insertWrapDetails'),\n    setToString = require('./_setToString'),\n    updateWrapDetails = require('./_updateWrapDetails');\n\n/**\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n * with wrapper details in a comment at the top of the source body.\n *\n * @private\n * @param {Function} wrapper The function to modify.\n * @param {Function} reference The reference function.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Function} Returns `wrapper`.\n */\nfunction setWrapToString(wrapper, reference, bitmask) {\n  var source = (reference + '');\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n}\n\nmodule.exports = setWrapToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var arrayEach = require('./_arrayEach'),\n    arrayIncludes = require('./_arrayIncludes');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256,\n    WRAP_FLIP_FLAG = 512;\n\n/** Used to associate wrap methods with their bit flags. */\nvar wrapFlags = [\n  ['ary', WRAP_ARY_FLAG],\n  ['bind', WRAP_BIND_FLAG],\n  ['bindKey', WRAP_BIND_KEY_FLAG],\n  ['curry', WRAP_CURRY_FLAG],\n  ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n  ['flip', WRAP_FLIP_FLAG],\n  ['partial', WRAP_PARTIAL_FLAG],\n  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n  ['rearg', WRAP_REARG_FLAG]\n];\n\n/**\n * Updates wrapper `details` based on `bitmask` flags.\n *\n * @private\n * @returns {Array} details The details to modify.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Array} Returns `details`.\n */\nfunction updateWrapDetails(details, bitmask) {\n  arrayEach(wrapFlags, function(pair) {\n    var value = '_.' + pair[0];\n    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n      details.push(value);\n    }\n  });\n  return details.sort();\n}\n\nmodule.exports = updateWrapDetails;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    copyArray = require('./_copyArray');\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  if (wrapper instanceof LazyWrapper) {\n    return wrapper.clone();\n  }\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n  result.__actions__ = copyArray(wrapper.__actions__);\n  result.__index__  = wrapper.__index__;\n  result.__values__ = wrapper.__values__;\n  return result;\n}\n\nmodule.exports = wrapperClone;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var createWrap = require('./_createWrap');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8;\n\n/**\n * Creates a function that accepts arguments of `func` and either invokes\n * `func` returning its result, if at least `arity` number of arguments have\n * been provided, or returns a function that accepts the remaining `func`\n * arguments, and so on. The arity of `func` may be specified if `func.length`\n * is not sufficient.\n *\n * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for provided arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of curried functions.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Function\n * @param {Function} func The function to curry.\n * @param {number} [arity=func.length] The arity of `func`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new curried function.\n * @example\n *\n * var abc = function(a, b, c) {\n *   return [a, b, c];\n * };\n *\n * var curried = _.curry(abc);\n *\n * curried(1)(2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2, 3);\n * // => [1, 2, 3]\n *\n * // Curried with placeholders.\n * curried(1)(_, 3)(2);\n * // => [1, 2, 3]\n */\nfunction curry(func, arity, guard) {\n  arity = guard ? undefined : arity;\n  var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n  result.placeholder = curry.placeholder;\n  return result;\n}\n\n// Assign default placeholders.\ncurry.placeholder = {};\n\nmodule.exports = curry;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseLodash = require('./_baseLodash'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike'),\n    wrapperClone = require('./_wrapperClone');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nmodule.exports = lodash;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use client';\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport { useClassNames, COLUMN_SIZE } from '../utils';\nvar Col = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'col' : _props$classPrefix,\n    className = props.className,\n    rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"className\"]);\n  var _useClassNames = useClassNames(classPrefix),\n    prefix = _useClassNames.prefix,\n    merge = _useClassNames.merge,\n    rootPrefix = _useClassNames.rootPrefix,\n    withClassPrefix = _useClassNames.withClassPrefix;\n  var colClasses = {};\n  var omitKeys = {};\n  var getPropValue = function getPropValue(key) {\n    omitKeys[key] = null;\n    return rest[key];\n  };\n  COLUMN_SIZE.forEach(function (size) {\n    var col = getPropValue(size);\n    var hidden = getPropValue(size + \"Hidden\");\n    var offset = getPropValue(size + \"Offset\");\n    var push = getPropValue(size + \"Push\");\n    var pull = getPropValue(size + \"Pull\");\n    colClasses[rootPrefix(\"hidden-\" + size)] = hidden;\n    colClasses[prefix(size + \"-\" + col)] = col >= 0;\n    colClasses[prefix(size + \"-offset-\" + offset)] = offset >= 0;\n    colClasses[prefix(size + \"-push-\" + push)] = push >= 0;\n    colClasses[prefix(size + \"-pull-\" + pull)] = pull >= 0;\n  });\n  var classes = merge(className, withClassPrefix(), colClasses);\n  var unhandledProps = omit(rest, Object.keys(omitKeys));\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"gridcell\"\n  }, unhandledProps, {\n    ref: ref,\n    className: classes\n  }));\n});\nCol.displayName = 'Col';\nCol.propTypes = {\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  xs: PropTypes.number,\n  sm: PropTypes.number,\n  md: PropTypes.number,\n  lg: PropTypes.number,\n  xl: PropTypes.number,\n  xxl: PropTypes.number,\n  xsOffset: PropTypes.number,\n  smOffset: PropTypes.number,\n  mdOffset: PropTypes.number,\n  lgOffset: PropTypes.number,\n  xlOffset: PropTypes.number,\n  xxlOffset: PropTypes.number,\n  xsPush: PropTypes.number,\n  smPush: PropTypes.number,\n  mdPush: PropTypes.number,\n  lgPush: PropTypes.number,\n  xsPull: PropTypes.number,\n  smPull: PropTypes.number,\n  mdPull: PropTypes.number,\n  lgPull: PropTypes.number,\n  xlPull: PropTypes.number,\n  xxlPull: PropTypes.number,\n  xsHidden: PropTypes.bool,\n  smHidden: PropTypes.bool,\n  mdHidden: PropTypes.bool,\n  lgHidden: PropTypes.bool,\n  xlHidden: PropTypes.bool,\n  xxlHidden: PropTypes.bool,\n  as: PropTypes.elementType\n};\nexport default Col;","'use client';\nimport Col from './Col';\nexport default Col;","'use client';\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useEffect } from 'react';\nimport { getClassNamePrefix, prefix } from '../utils/prefix';\nimport { addClass, removeClass, canUseDOM } from '../DOMHelper';\nimport ToastContainer, { toastPlacements } from '../toaster/ToastContainer';\nimport { usePortal } from '../utils';\nvar CustomContext = /*#__PURE__*/React.createContext({});\nvar themes = ['light', 'dark', 'high-contrast'];\nvar CustomProvider = function CustomProvider(props) {\n  var children = props.children,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? getClassNamePrefix() : _props$classPrefix,\n    theme = props.theme,\n    container = props.toastContainer,\n    disableRipple = props.disableRipple,\n    rest = _objectWithoutPropertiesLoose(props, [\"children\", \"classPrefix\", \"theme\", \"toastContainer\", \"disableRipple\"]);\n  var toasters = React.useRef(new Map());\n  var _usePortal = usePortal({\n      container: container,\n      waitMount: true\n    }),\n    Portal = _usePortal.Portal;\n  var value = React.useMemo(function () {\n    return _extends({\n      classPrefix: classPrefix,\n      theme: theme,\n      toasters: toasters,\n      disableRipple: disableRipple\n    }, rest);\n  }, [classPrefix, theme, disableRipple, rest]);\n  useEffect(function () {\n    if (canUseDOM && theme) {\n      addClass(document.body, prefix(classPrefix, \"theme-\" + theme));\n\n      // Remove the className that will cause style conflicts\n      themes.forEach(function (t) {\n        if (t !== theme) {\n          removeClass(document.body, prefix(classPrefix, \"theme-\" + t));\n        }\n      });\n    }\n  }, [classPrefix, theme]);\n  return /*#__PURE__*/React.createElement(CustomContext.Provider, {\n    value: value\n  }, children, /*#__PURE__*/React.createElement(Portal, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rs-toast-provider\"\n  }, toastPlacements.map(function (placement) {\n    return /*#__PURE__*/React.createElement(ToastContainer, {\n      key: placement,\n      placement: placement,\n      ref: function ref(_ref) {\n        toasters.current.set(placement, _ref);\n      }\n    });\n  }))));\n};\nexport { CustomContext };\nexport default CustomProvider;","'use client';\nexport var SIZE = ['lg', 'md', 'sm', 'xs'];\nexport var COLUMN_SIZE = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport var STATUS = ['success', 'warning', 'error', 'info'];\nexport var COLOR = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet'];\nexport var PLACEMENT_4 = ['top', 'bottom', 'right', 'left'];\nexport var PLACEMENT_8 = ['bottomStart', 'bottomEnd', 'topStart', 'topEnd', 'leftStart', 'rightStart', 'leftEnd', 'rightEnd'];\nexport var PLACEMENT_AUTO = ['auto', 'autoVertical', 'autoVerticalStart', 'autoVerticalEnd', 'autoHorizontal', 'autoHorizontalStart', 'autoHorizontalEnd'];\nexport var PLACEMENT = [].concat(PLACEMENT_4, PLACEMENT_8, PLACEMENT_AUTO);\n\n/**\n *  Check Tree Node State\n */\nexport var CHECK_STATE;\n(function (CHECK_STATE) {\n  CHECK_STATE[CHECK_STATE[\"UNCHECK\"] = 0] = \"UNCHECK\";\n  CHECK_STATE[CHECK_STATE[\"CHECK\"] = 1] = \"CHECK\";\n  CHECK_STATE[CHECK_STATE[\"INDETERMINATE\"] = 2] = \"INDETERMINATE\";\n})(CHECK_STATE || (CHECK_STATE = {}));\nexport var TREE_NODE_PADDING = 16;\nexport var TREE_NODE_ROOT_PADDING = 12;\n\n/**\n * Tree Node Drag Type\n */\nexport var TREE_NODE_DROP_POSITION;\n\n/**\n * UI Events KeyboardEvent key Values\n * https://www.w3.org/TR/uievents-key\n */\n(function (TREE_NODE_DROP_POSITION) {\n  TREE_NODE_DROP_POSITION[TREE_NODE_DROP_POSITION[\"DRAG_OVER\"] = 0] = \"DRAG_OVER\";\n  TREE_NODE_DROP_POSITION[TREE_NODE_DROP_POSITION[\"DRAG_OVER_TOP\"] = 1] = \"DRAG_OVER_TOP\";\n  TREE_NODE_DROP_POSITION[TREE_NODE_DROP_POSITION[\"DRAG_OVER_BOTTOM\"] = 2] = \"DRAG_OVER_BOTTOM\";\n})(TREE_NODE_DROP_POSITION || (TREE_NODE_DROP_POSITION = {}));\nexport var KEY_VALUES = {\n  // Navigation Keys\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n  END: 'End',\n  HOME: 'Home',\n  PAGE_DOWN: 'PageDown',\n  PAGE_UP: 'PageUp',\n  // Whitespace Keys\n  ENTER: 'Enter',\n  TAB: 'Tab',\n  SPACE: ' ',\n  // Editing Keys\n  BACKSPACE: 'Backspace',\n  DELETE: 'Delete',\n  COMMA: ',',\n  // UI Keys\n  ESC: 'Escape'\n};\nexport var DATERANGE_DISABLED_TARGET;\n(function (DATERANGE_DISABLED_TARGET) {\n  DATERANGE_DISABLED_TARGET[\"CALENDAR\"] = \"CALENDAR\";\n  DATERANGE_DISABLED_TARGET[\"TOOLBAR_BUTTON_OK\"] = \"TOOLBAR_BUTTON_OK\";\n  DATERANGE_DISABLED_TARGET[\"TOOLBAR_SHORTCUT\"] = \"TOOLBAR_SHORTCUT\";\n})(DATERANGE_DISABLED_TARGET || (DATERANGE_DISABLED_TARGET = {}));","'use client';\nimport classNames from 'classnames';\nimport curry from 'lodash/curry';\nexport var globalKey = 'rs-';\nexport var getClassNamePrefix = function getClassNamePrefix() {\n  // TODO: A prefix that can be replaced at runtime.\n\n  return globalKey;\n};\nexport var defaultClassPrefix = function defaultClassPrefix(name) {\n  return \"\" + getClassNamePrefix() + name;\n};\nexport function prefix(pre, className) {\n  if (!pre || !className) {\n    return '';\n  }\n  if (Array.isArray(className)) {\n    return classNames(className.filter(function (name) {\n      return !!name;\n    }).map(function (name) {\n      return pre + \"-\" + name;\n    }));\n  }\n\n  // TODO Compatible with V4\n  if (pre[pre.length - 1] === '-') {\n    return \"\" + pre + className;\n  }\n  return pre + \"-\" + className;\n}\nexport default curry(prefix);","'use client';\nimport { useCallback, useContext } from 'react';\nimport classNames from 'classnames';\nimport { prefix as addPrefix } from './prefix';\nimport { CustomContext } from '../CustomProvider/CustomProvider';\n\n// This is the only way I found to break circular references between ClassArray and ClassValue\n// https://github.com/Microsoft/TypeScript/issues/3496#issuecomment-128553540\n//eslint-disable-line @typescript-eslint/no-empty-interface\n/**\n * Add a prefix to all classNames.\n *\n * @param str prefix of className\n * @returns { withClassPrefix, merge, prefix }\n *  - withClassPrefix: A function of combining className and adding a prefix to each className.\n *    At the same time, the default `classPrefix` is the first className.\n *  - merge: A merge className function.\n *  - prefix: Add a prefix to className\n *  - rootPrefix\n */\nfunction useClassNames(str) {\n  var _ref = useContext(CustomContext) || {},\n    _ref$classPrefix = _ref.classPrefix,\n    classPrefix = _ref$classPrefix === void 0 ? 'rs' : _ref$classPrefix;\n  var componentName = addPrefix(classPrefix, str);\n\n  /**\n   * @example\n   *\n   * if str = 'button':\n   * prefix('red', { active: true }) => 'rs-button-red rs-button-active'\n   */\n  var prefix = useCallback(function () {\n    var mergeClasses = arguments.length ? classNames.apply(void 0, arguments).split(' ').map(function (item) {\n      return addPrefix(componentName, item);\n    }) : [];\n    return mergeClasses.filter(function (cls) {\n      return cls;\n    }).join(' ');\n  }, [componentName]);\n\n  /**\n   * @example\n   *\n   * if str = 'button':\n   * withClassPrefix('red', { active: true }) => 'rs-button rs-button-red rs-button-active'\n   */\n  var withClassPrefix = useCallback(function () {\n    for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n      classes[_key] = arguments[_key];\n    }\n    var mergeClasses = prefix(classes);\n    return mergeClasses ? componentName + \" \" + mergeClasses : componentName;\n  }, [componentName, prefix]);\n\n  /**\n   * @example\n   * rootPrefix('btn') => 'rs-btn'\n   * rootPrefix('btn', { active: true }) => 'rs-btn rs-active'\n   */\n  var rootPrefix = function rootPrefix() {\n    var mergeClasses = arguments.length ? classNames.apply(void 0, arguments).split(' ').map(function (item) {\n      return addPrefix(classPrefix, item);\n    }) : [];\n    return mergeClasses.filter(function (cls) {\n      return cls;\n    }).join(' ');\n  };\n  return {\n    withClassPrefix: withClassPrefix,\n    merge: classNames,\n    prefix: prefix,\n    rootPrefix: rootPrefix\n  };\n}\nexport default useClassNames;","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","arr","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","THEME_MODE","getThemeMode","savedThemeMode","window","localStorage","getItem","matchMedia","matches","useTheme","themeMode","setThemeMode","useState","themeClassName","document","body","classList","add","useEffect","initialMode","initialThemeClassName","setItem","remove","useWindowSize","size","setSize","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","useSiteMetadata","useStaticQuery","site","siteMetadata","emptyOptions","one","includeImageAlt","includeHtml","Boolean","node","type","alt","children","values","result","index","splice","list","start","items","end","parameters","chunkStart","from","unshift","slice","subtokenize","events","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_tokenizer","_isInFirstContentOfListItem","contentType","assign","subcontent","_container","undefined","eventIndex","token","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","next","defineSkip","_gfmTasklistFirstContentOfListItem","write","line","pop","syntaxExtension","all","extension","hook","left","right","code","constructs","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","test","String","fromCharCode","factorySpace","effects","ok","max","limit","Number","POSITIVE_INFINITY","enter","prefix","consume","exit","content","tokenize","contentStart","attempt","this","contentInitial","lineStart","data","self","stack","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","point","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","flowContinue","writeToChild","eof","seen","entry","nok","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","resolve","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","column","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","shift","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","media","group","label","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","parse","extensions","combineExtensions","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$0","$1","$2","hex","stringifyPosition","position","pos","own","fromMarkdown","encoding","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tree","tokenStack","resume","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","Error","settings","expectingFirstListItemValue","lang","flowCodeInside","title","url","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","checked","compiler","postprocess","atCarriageReturn","match","endPosition","TextDecoder","lastIndex","exec","Math","ceil","preprocess","d","combined","zwitch","fn","invalid","handlers","id","unknown","blank","patternInScope","pattern","listInScope","inConstruct","notInConstruct","none","_1","unsafe","character","formatCodeAsIndented","fences","checkQuote","quote","checkEmphasis","tracker","createTracker","move","containerPhrasing","peek","convert","castFactory","tests","checks","any","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","parent","looksLikeANode","empty","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","concat","child","formatHeadingAsSetext","literalWithBreak","testOrVisitor","visitorOrReverse","maybeReverse","indexOf","setext","suffix","subexit","safe","imageReference","associationId","inlineCode","RegExp","expression","compilePattern","formatLinkAsAutolink","resourceLink","linkReference","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","handle","blockquote","indentLines","containerFlow","break","fence","checkFence","repeat","substring","source","expected","count","TypeError","longestStreak","encode","rank","min","lastIndexOf","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","style","checkListItemIndent","incrementListMarker","root","some","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","fullPhrasingSpans","association","_compiled","eol","numerical","a","b","escapeBackslashes","positions","results","whole","track","lineShift","input","split","toMarkdown","containerPhrasingBound","containerFlowBound","safeBound","tightDefinitions","joinDefinition","charAt","infos","sort","bail","error","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","run","middlewareIndex","callback","output","middleware","wrapped","fnExpectsCallback","done","then","wrap","middelware","VFileMessage","causeOrReason","optionsOrParentOrPlace","origin","super","reason","legacyCause","place","ancestors","cause","message","ruleId","fatal","file","actual","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","normalize","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","isUint8Array","history","messages","stored","prop","assertNonEmpty","assertPart","stem","fail","part","sep","CallableInstance","property","proto","func","setPrototypeOf","names","getOwnPropertyNames","p","descriptor","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","destination","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","rest","currentPrimary","asyncName","looksLikeAVFile","remark","unified","doc","clean","trim","ABSOLUTE_URL_REGEX","WINDOWS_PATH_REGEX","defaultRel","defaultProtocols","remarkExternalLinks","rel","protocols","contentProperties","cache","definitions","ctx","props","hProperties","hName","hChildren","env","globalThis","deserialize","serialized","$","as","out","set","unpair","has","get","object","Date","flags","Map","Set","BigInt","deserializer","EMPTY","keys","typeOf","asString","shouldSkip","TYPE","serialize","json","lossy","strict","pair","valueOf","toJSON","entries","toISOString","serializer","structuredClone","pointEnd","pointStart","aria","defaultSchema","tbody","td","th","thead","tfoot","tr","attributes","del","div","dl","h2","img","ins","li","ol","q","section","summary","table","ul","clobber","clobberPrefix","cite","longDesc","required","disabled","strip","tagNames","transform","schema","allowComments","patch","allowDoctypes","doctype","properties","specific","defaults","propertyValue","findDefinition","safeElement","childrenUnknown","propertyValuePrimitive","propertyValueMany","colon","questionMark","numberSign","safeProtocol","allowed","cleanPosition","dataDefault","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","revert","subtype","contents","listItemLoose","tab","space","trimLines","last","lines","trimLine","applyData","className","delete","footnoteReference","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","ariaDescribedBy","sup","allowDangerousHtml","definitionById","loose","listLoose","rows","firstRow","tableContent","tableCell","tableRow","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","footnoteById","nodes","trimMarkdownSpaceStart","passThrough","shallow","unknownHandler","defaultUnknownHandler","to","toHast","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","htmlVoidElements","Schema","normal","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","DefinedInfo","mask","mark","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","writingSuggestions","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","defaultSubsetRegex","surrogatePairsRegex","controlCharactersRegex","regexEscapeRegex","subsetToRegexCache","WeakMap","subset","cached","groups","charactersToExpression","charactersToExpressionCached","basic","escapeOnly","hexadecimalRegex","decimalRegex","characterEntitiesLegacy","characterEntitiesHtml4","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","rang","loz","spades","clubs","hearts","diams","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","dangerous","characters","notAlphanumericRegex","formatSmart","named","omit","toHexadecimal","omitOptionalSemicolons","useNamedReferences","useShortestReferences","toNamed","decimal","toDecimal","stringifyEntities","htmlCommentRegex","bogusCommentEntitySubset","commentEntitySubset","ccount","padRight","padLeft","valid","dash","kebab","camelcase","re","whitespace","thing","siblingAfter","siblingBefore","emptyChildren","includeWhitespace","omission","closing","caption","headOrColgroupOrCaption","colgroup","dd","dt","optgroup","option","rp","rubyElement","rt","opening","constants","unquoted","single","double","serializeAttribute","Type","dashes","find","allowParseErrors","allowDangerousCharacters","isNaN","characterReferences","tightCommaSeparatedLists","collapseEmptyAttributes","preferUnquoted","quoteSmart","alternative","textEntitySubset","node_","_2","bogusComments","_3","upperDoctype","tightDoctype","omitOptionalTags","selfClosing","closeEmptyElements","voids","parts","tightAttributes","serializeAttributes","closeSelfClosing","tightSelfClosing","emptyCharacterReferences","remarkHtml","sanitize","toHtmlOptions","hast","options_","toHtml","CommonUtils","generateFullUrl","siteMetaData","urlPrefix","siteUrl","pathPrefix","_len","_key","resolveUrl","_len2","paths","_key2","reduce","resolvedUrl","urlPath","resolvePageUrl","getSuggestedPosts","post","postList","getTagScore","edge","commonTags","frontmatter","tags","forEach","tag","edges","edgeA","edgeB","getRelatedTranslations","_ref","internal","contentFilePath","_ref2","hreflang","defaultLanguage","capitalize","str","generateOmittedPostInfo","formatDate","date","moment","isValid","parseMarkDown","removeParagraph","md","externalLinks","e","trimExcerpt","excerpt","excerptMaxLength","W","hasNativeLazyLoadSupport","HTMLImageElement","t","images","fallback","gatsbyImageData","gatsbyImage","childImageSharp","C","s","P","h","shouldLoad","A","n","o","l","backgroundColor","top","bottom","objectFit","objectPosition","transition","H","F","_ref5","layout","paddingTop","maxWidth","G","u","V","B","U","Y","sources","_ref6","X","propTypes","isRequired","displayName","J","Z","K","Q","ee","te","ae","c","ie","se","oe","de","class","g","onStartLoad","m","f","w","v","E","S","M","N","I","_ref7","renderImageToString","swapPlaceholderImage","querySelector","wasCached","setTimeout","removeAttribute","_ref8","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","imgClassName","imgStyle","pe","me","fe","we","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","pascalCase","preserveConsecutiveUppercase","locale","toLocaleLowerCase","toLocaleUpperCase","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","m1","postProcess","DataView","getNative","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","baseCreate","baseLodash","LazyWrapper","__wrapped__","__actions__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","LodashWrapper","chainAll","__chain__","__index__","__values__","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","__data__","Uint8Array","thisArg","args","array","iteratee","predicate","resIndex","baseIndexOf","baseTimes","isArguments","isBuffer","isIndex","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","baseAssignValue","eq","objValue","copyObject","keysIn","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","isDeep","isFlat","isFull","isFunc","stacked","subValue","objectCreate","fromIndex","fromRight","arrayPush","isFlattenable","baseFlatten","isStrict","castPath","toKey","keysFunc","symbolsFunc","getRawTag","objectToString","symToStringTag","baseFindIndex","baseIsNaN","strictIndexOf","baseGetTag","isObjectLike","isFunction","isMasked","toSource","reIsHostCtor","funcProto","Function","objectProto","funcToString","reIsNative","isLength","typedArrayTags","isPrototype","nativeKeys","nativeKeysIn","isProto","identity","metaMap","baseSetData","constant","baseSetToString","arrayMap","isSymbol","symbolProto","symbolToString","baseToString","trimmedEndIndex","reTrimStart","isKey","stringToPath","arrayBuffer","byteLength","freeExports","nodeType","freeModule","Buffer","allocUnsafe","cloneArrayBuffer","dataView","byteOffset","reFlags","regexp","symbolValueOf","symbol","typedArray","nativeMax","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","coreJsData","createCtor","isBind","Ctor","wrapper","thisBinding","createHybrid","createRecurry","getHolder","replaceHolders","arity","composeArgs","composeArgsRight","countHolders","reorder","partialsRight","holdersRight","argPos","ary","isAry","isBindKey","isFlip","holdersCount","newHolders","isLaziable","setData","setWrapToString","wrapFunc","isCurry","newData","createBind","createCurry","createPartial","getData","mergeData","toInteger","flatten","overRest","setToString","freeGlobal","baseGetAllKeys","noop","realNames","otherFunc","isKeyable","baseIsNative","getValue","getPrototype","overArg","nativeObjectToString","isOwn","unmasked","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","reWrapDetails","reSplitDetails","nativeCreate","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","reWrapComment","details","spreadableSymbol","isConcatSpreadable","reIsUint","reIsDeepProp","reIsPlainProp","getFuncName","lodash","funcName","other","uid","maskSrcKey","IE_PROTO","assocIndexOf","getMapData","memoize","PLACEHOLDER","WRAP_ARY_FLAG","nativeMin","srcBitmask","newBitmask","isCommon","isCombo","freeProcess","nodeUtil","types","require","binding","otherArgs","baseGet","baseSlice","indexes","arrLength","oldArray","freeSelf","shortOut","getWrapDetails","insertWrapDetails","updateWrapDetails","nativeNow","lastCalled","stamp","remaining","pairs","LARGE_ARRAY_SIZE","memoizeCapped","rePropName","reEscapeChar","subString","reWhitespace","arrayIncludes","wrapFlags","createWrap","curry","guard","baseIsArguments","stubFalse","baseIsMap","baseUnary","nodeIsMap","objectCtorString","baseIsSet","nodeIsSet","baseIsTypedArray","nodeIsTypedArray","arrayLikeKeys","baseKeys","isArrayLike","baseKeysIn","memoized","Cache","baseUnset","customOmitClone","flatRest","CLONE_DEEP_FLAG","toNumber","INFINITY","toFinite","remainder","baseTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isBinary","wrapperClone","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","runClearTimeout","Item","nextTick","browser","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","chdir","umask","Col","_props$as","Component","_props$classPrefix","classPrefix","_useClassNames","useClassNames","rootPrefix","withClassPrefix","colClasses","omitKeys","getPropValue","col","pull","unhandledProps","xs","sm","lg","xl","xxl","xsOffset","smOffset","mdOffset","lgOffset","xlOffset","xxlOffset","xsPush","smPush","mdPush","lgPush","xsPull","smPull","mdPull","lgPull","xlPull","xxlPull","xsHidden","smHidden","mdHidden","lgHidden","xlHidden","xxlHidden","CustomContext","CHECK_STATE","COLUMN_SIZE","STATUS","PLACEMENT","TREE_NODE_DROP_POSITION","DATERANGE_DISABLED_TARGET","KEY_VALUES","LEFT","UP","RIGHT","DOWN","END","HOME","PAGE_DOWN","PAGE_UP","ENTER","TAB","SPACE","BACKSPACE","DELETE","COMMA","ESC","pre","_ref$classPrefix","useContext","componentName","useCallback","cls","mergeClasses","_extends","bind","_objectWithoutPropertiesLoose","excluded","sourceKeys"],"sourceRoot":""}